<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[JSON Web Token 应用实例]]></title>
      <url>/2017/09/26/get-started-for-token/</url>
      <content type="html"><![CDATA[<h2 id="1-Token是啥"><a href="#1-Token是啥" class="headerlink" title="1. Token是啥"></a>1. <code>Token</code>是啥</h2><p><code>Token</code>是服务端生成的一串字符串，以作客户端进行请求的一个令牌，当第一次登录后，服务器生成一个<code>Token</code>便将此<code>Token</code>返回给客户端，以后客户端只需带上这个<code>Token</code>前来请求数据即可，无需再次带上用户名和密码。</p>
<h2 id="2-为什么要使用Token"><a href="#2-为什么要使用Token" class="headerlink" title="2. 为什么要使用Token"></a>2. 为什么要使用<code>Token</code></h2><p><code>Token</code>的目的是为了减轻服务器的压力，减少频繁的查询数据库，使服务器更加健壮。</p>
<h2 id="3-JWT标准"><a href="#3-JWT标准" class="headerlink" title="3. JWT标准"></a>3. <code>JWT</code>标准</h2><h3 id="3-1-JSON-Web-Token-定义"><a href="#3-1-JSON-Web-Token-定义" class="headerlink" title="3.1 JSON Web Token 定义"></a>3.1 JSON Web Token 定义</h3><p>JSON Web Token (JWT)是一个开放标准(<a href="https://tools.ietf.org/html/rfc7519" target="_blank" rel="external">RFC 7519</a>)，定义了一种紧凑(<code>Compact</code>)且独立(<code>Self-contained</code>)的方式，用于将各方之间的信息安全地传输为<code>JSON</code>对象。传输信息包含数字签名，可以进行校验并可信的。JWT可以通过秘钥（使用HMAC算法）或使用RSA的公钥/私钥进行签名。</p>
<p><strong>概念解读</strong></p>
<blockquote>
<p><code>Compact</code>: 由于<code>jwt</code>的尺寸较小，可以通过<code>URL</code>，<code>POST</code>参数以及<code>HTTP header</code>中发送。此外，<code>jwt</code>较小的尺寸意味着传输的更快</p>
<p><code>Self-contained</code>: <code>JWT</code>载荷中包含用户的所有必要信息，避免了需要多次查查库的操作。</p>
</blockquote>
<h3 id="3-2-JSON-Web-Token-应用场景"><a href="#3-2-JSON-Web-Token-应用场景" class="headerlink" title="3.2 JSON Web Token 应用场景"></a>3.2 JSON Web Token 应用场景</h3><blockquote>
<p><code>认证</code>（<code>Authentication</code>）：<code>JWT</code>最常见的场景就是用户认证，一旦用户成功登录以后，每一个后来的请求都需要包含服务端反馈的<code>JWT</code>信息，通过该<code>token</code>允许用户访问路由、服务以及资源。现在，<code>JWT</code>也被广泛的应用于单点登录（<code>Single Sign On</code>）,其主要优势在于使用更小的开销并能够轻松的适用于跨域场景。</p>
<p><code>信息交流</code>（<code>Information Exchange</code>）: <code>JWT</code>在各方之间安全传输信息是一个非常好的选择。基于<code>JWT</code>可被签名的特性，可以通过公/私钥的方式确定你要发送的目标方。此外，每个<code>JWT</code>的签名是通过其头部和载荷部分计算得出的，你可以确认传送的内容信息有没有被篡改。</p>
</blockquote>
<h3 id="3-3-JSON-Web-Token-构成"><a href="#3-3-JSON-Web-Token-构成" class="headerlink" title="3.3 JSON Web Token 构成"></a>3.3 JSON Web Token 构成</h3><p><code>JSON Web Tokens</code>包含三部分并用<code>.</code>分隔, 分别是：</p>
<pre><code>* `Header` 头信息
* `Payload` 载荷
* `Signature` 签名
</code></pre><p>因此，一个<code>jwt</code>信息通常是这个样子滴：<br><code>xxxxxx.yyyyyyy.zzzzzzz</code></p>
<p>下面详细了解这三个部分</p>
<p><strong><code>Header</code> 头信息</strong></p>
<p><code>JWT</code>的头部通常包含两部分内容：<code>token</code>的类型以及用到的加密算法。例如HMAC SHA256或RSA</p>
<p>实例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  &quot;alg&quot;: &quot;HS256&quot;,</div><div class="line">  &quot;typ&quot;: &quot;JWT&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>然后将这部分通过<code>Base64</code>加密并作为<code>JWT</code>的第一部分。</p>
<p><strong><code>Payload</code> 载荷</strong></p>
<p><code>Token</code>的第二部分就是载荷，这部分包含一些声明。这些声明主要包括一些实体（通常是用户）信息和一些额外的元数据信息。这些声明分为三种类型：保留(<code>reserved</code>)声明、公共(<code>public</code>)声明以及私有(<code>private</code>)声明</p>
<ul>
<li><p><strong>保留(<code>reserved</code>)声明</strong>: 这是一个预定义的声明集合，不强制使用，推荐使用。提供了一些有用的，互操作性的声明。（较短的声明名称是为了jwt更紧凑，更利于传输）</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">iss: JWT签发者</div><div class="line">sub: JWT所面向的用户</div><div class="line">aud: JWT接收方</div><div class="line">exp(expires): 过期时间，这里是一个Unix时间戳</div><div class="line">iat(issued at): 签发时间，这里是一个Unix时间戳</div></pre></td></tr></table></figure>
</li>
<li><p><strong>公共(<code>public</code>)声明</strong>: 这些是由使用<code>JWT</code>的人们定义的，为了防止冲突可以在<code>IANA JSON Web Token Registry</code>中注册。</p>
</li>
<li><p><strong>私有(<code>private</code>)声明</strong>: 这些是使用<code>JWT</code>的各方之间共享信息的自定义声明。</p>
</li>
</ul>
<p>实例</p>
<pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  &quot;sub&quot;: &quot;1234567890&quot;,</div><div class="line">  &quot;name&quot;: &quot;John Doe&quot;,</div><div class="line">  &quot;admin&quot;: true</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</code></pre><p>然后将payload进行<code>Base64</code>加密组成<code>JWT</code>的第二部分。</p>
<p><strong><code>Signature</code> 签名</strong></p>
<p>创建签名时需要你准备好加密后的头、载荷信息，一个密钥和指定的算法类型。最后进行签名。</p>
<p>例如你使用<code>HMAC SHA256</code>算法进行签名的话需要采用下面的方式</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">HMACSHA256(</div><div class="line">  base64UrlEncode(header) + &quot;.&quot; +</div><div class="line">  base64UrlEncode(payload),</div><div class="line">  secret)</div></pre></td></tr></table></figure>
<p>这个签名用于确认发送方的数据有没有在信息传输过程中被篡改。</p>
<p><strong>合体</strong></p>
<p>将处理后的三部分信息通过<code>.</code>连接成一个字符串，可以轻松的在<code>HTTP</code>环境中进行传递。并且与基于XML的规范(例如<code>SAML</code>)相比，其结构更紧凑更利于传输。</p>
<p>下面就是一个<code>JWT</code>实例，包含加密后的头和载荷，并通过一个密钥进行签名。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ</div></pre></td></tr></table></figure>
<p>可以去生成并校验<code>JWT</code>。<br>如果要使用JWT并将这些概念付诸实践，可以使用<a href="http://jwt.io" target="_blank" rel="external">jwt.io.Debugger</a>对JWT进行解码，验证和生成。</p>
<h2 id="4-JWT实例"><a href="#4-JWT实例" class="headerlink" title="4. JWT实例"></a>4. <code>JWT</code>实例</h2><h3 id="4-1-流程设计"><a href="#4-1-流程设计" class="headerlink" title="4.1 流程设计"></a>4.1 流程设计</h3><p><img src="https://cdn.auth0.com/content/jwt/jwt-diagram.png" alt="认证流程"></p>
<h3 id="4-2-贴代码"><a href="#4-2-贴代码" class="headerlink" title="4.2 贴代码"></a>4.2 贴代码</h3><blockquote>
<p>客户端：Vue.js<br>应用模块：<br>  axios.js 请求发起<br>  qs.js 字符串JSON对象转换<br>  js-base64 前端Base64解密<br>服务端：Spring Boot<br>应用类库：<br>  MyBatis3 数据库操作<br>  fastjson 字符串JSON对象转换<br>  commons-codec 加密解密库</p>
</blockquote>
<ol>
<li>客户端提交登录请求</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">export const login = (&#123; commit &#125;, form) =&gt; &#123;</div><div class="line">  </div><div class="line">  return Vue.http.post(API.USER_LOGIN, qs.stringify(form)).then(data =&gt; &#123;</div><div class="line">    return data</div><div class="line">  &#125;)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ol>
<li>服务端认证并生成Token</li>
</ol>
<p>// Controller 请求接口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">@CrossOrigin // 跨域</div><div class="line">@RestController // Rest请求</div><div class="line">@RequestMapping(&quot;/login&quot;) // 作用域</div><div class="line">public class LoginController &#123;</div><div class="line"></div><div class="line">    @ApiOperation(value=&quot;用户认证接口&quot;, notes=&quot;&quot;)</div><div class="line">    @ApiImplicitParams(&#123;</div><div class="line">            @ApiImplicitParam(name = &quot;username&quot;, value = &quot;用户名&quot;, required = true, dataType = &quot;String&quot;),</div><div class="line">            @ApiImplicitParam(name = &quot;password&quot;, value = &quot;密码&quot;, required = true, dataType = &quot;String&quot;)</div><div class="line">    &#125;)</div><div class="line">    @RequestMapping(path=&quot;/checkUser&quot;, method = RequestMethod.POST) // </div><div class="line">    public ResponseEntity&lt;R&gt; login(@RequestParam String username, @RequestParam String password) &#123;</div><div class="line">        </div><div class="line">        R r = null;</div><div class="line">        try &#123;</div><div class="line">            r = loginServiceImpl.login(username, password);</div><div class="line">        &#125; catch (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">            r = R.fail(&quot;系统内部异常,请稍后再试&quot;);</div><div class="line">        &#125;</div><div class="line">        return new ResponseEntity&lt;&gt;(r, HttpStatus.OK);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>// 认证<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">@Service</div><div class="line">public class LoginServiceImpl implements LoginService &#123;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * &lt;b&gt;功能：登录验证&lt;/b&gt;&lt;br&gt;</div><div class="line">     * &lt;br&gt;</div><div class="line">     * @Author:pfyangf , 2017年9月18日</div><div class="line">     * @param cUsrNme 用户名</div><div class="line">     * @param cPasswd 密码</div><div class="line">     * @return SysToken</div><div class="line">     **/</div><div class="line">    public R login(String cUsrNme, String cPasswd)&#123;</div><div class="line">        R r = R.ok();</div><div class="line">        if(StringUtils.isEmpty(cUsrNme) || StringUtils.isEmpty(cPasswd))&#123;</div><div class="line">            r.change(500, &quot;用户名及密码不能为空&quot;);</div><div class="line">        &#125;</div><div class="line">        SysUser user = sysUserMapper.findByUsername(cUsrNme);</div><div class="line">        if(null == user || !cPasswd.equals(user.getCPasswd()))&#123;</div><div class="line">            r.change(500, &quot;用户名密码不匹配&quot;);</div><div class="line">        &#125;else &#123;</div><div class="line">            r.put(&quot;data&quot;, jwtTokenServiceImpl.createToken(user)); // 创建Token</div><div class="line">            sysUserMapper.changeLastLoginDate(user.getCPkId()); // 修改用户最后登录时间</div><div class="line">        &#125;</div><div class="line">        return r;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>// 生成Token<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">@Service(&quot;jwtTokenServiceImpl&quot;)</div><div class="line">public class JwtTokenServiceImpl implements TokenService &#123;</div><div class="line">    </div><div class="line">    @Value(&quot;$&#123;auth.tokens.expires&#125;&quot;)</div><div class="line">    private Integer authTokensExpires; // token超时时间</div><div class="line">    @Value(&quot;$&#123;auth.tokens.secret&#125;&quot;)</div><div class="line">    private String authTokensSecret; // token盐</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public SysToken createToken(SysUser user) &#123;</div><div class="line">        // 1. header</div><div class="line">        SysJWTHeader jwtHeader = new SysJWTHeader();</div><div class="line">        String headerBase = Base64Util.encode(JSON.toJSONString(jwtHeader));</div><div class="line">        // 2. payload</div><div class="line">        SysJWTPayload jwtPayload = new SysJWTPayload();</div><div class="line">        String jti = CommonUtil.getUuid();</div><div class="line">        jwtPayload.setJti(jti); // jwt 唯一标识</div><div class="line">        Calendar cal = Calendar.getInstance(); // 当前时间</div><div class="line">        jwtPayload.setIat(cal.getTime().getTime()); // 签发时间</div><div class="line">        cal.add(Calendar.MINUTE, authTokensExpires);</div><div class="line">        jwtPayload.setExp(cal.getTime().getTime()); // 设置超时时间</div><div class="line">        jwtPayload.setSub(user.getCPkId()); // 用户主键</div><div class="line">        jwtPayload.setUser(user); // 用户信息</div><div class="line">        String payloadBase = Base64Util.encode(JSON.toJSONString(jwtPayload));</div><div class="line">        // 3. sign</div><div class="line">        String encodedString = headerBase.concat(&quot;.&quot;).concat(payloadBase);</div><div class="line">        String signature = HMACSHA256Util.getSHA256Secure(encodedString, authTokensSecret); </div><div class="line">        // 4. 服务端暂存</div><div class="line">        String userId = user.getCPkId();</div><div class="line">        TokenStorageManager.getTokenStorage().put(userId, jti);</div><div class="line">        return new SysToken(userId, encodedString.concat(&quot;.&quot;).concat(signature));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>// 服务端存储token主键<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">public class TokenStorageManager &#123;</div><div class="line"></div><div class="line">    private static ConcurrentHashMap&lt;String, String&gt; tokenStorage = null; // token仓库</div><div class="line">    </div><div class="line">    /**</div><div class="line">     * &lt;b&gt;功能：获取暂存map&lt;/b&gt;&lt;br&gt;</div><div class="line">     * &lt;br&gt;</div><div class="line">     * @Author:pfyangf , 2017年9月22日</div><div class="line">     * @return ConcurrentHashMap&lt;String,String&gt;</div><div class="line">     **/</div><div class="line">    public static ConcurrentHashMap&lt;String, String&gt; getTokenStorage()&#123;</div><div class="line">        if(null == tokenStorage)&#123;</div><div class="line">            synchronized (TokenStorageManager.class) &#123;</div><div class="line">                if(null == tokenStorage)&#123;</div><div class="line">                    tokenStorage = new ConcurrentHashMap&lt;&gt;();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return tokenStorage;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<ol>
<li>客户端解析token并保存</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">let token = data.data.token;</div><div class="line">if(null != token &amp;&amp; token.length &gt; 0)&#123;</div><div class="line">  let tokenArr = token.split(&apos;.&apos;);</div><div class="line">  let tokenObjArr = tokenArr.map((item, index) =&gt; &#123;</div><div class="line">    return index != 2 ? qs.parse(Base64.decode(item)) : item;</div><div class="line">    // return index != 2 ? JSON2.parse(Base64.decode(item)) : item;</div><div class="line">  &#125;);</div><div class="line">  commit(SET_EXP, tokenObjArr[1]) // 暂存payload</div><div class="line">  commit(SET_USERINFO, tokenObjArr[1].user) // 暂存用户信息</div><div class="line">  commit(SET_TOKEN, token) // 暂存token</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ol>
<li>客户端发出业务请求要求携带token</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">http.interceptors.request.use(function(config) &#123;</div><div class="line">  if (config.appendToken === false) &#123; // 无需 TOKEN 注入</div><div class="line">    NProgress.start()</div><div class="line">    return config</div><div class="line">  &#125;</div><div class="line">  const token = store.state.user.token</div><div class="line"></div><div class="line">  /**</div><div class="line">   * TOKEN 注入</div><div class="line">   * </div><div class="line">   * 此处直接在 query (GET方法) 或者 form-data (POST PUT DELETE 等方法) 注入session 参数</div><div class="line">   * ！实际情况请根据前后端的API规范进行定义</div><div class="line">   */</div><div class="line">  // 自定义token过长 索性直接放header中</div><div class="line">  if(token)&#123;</div><div class="line">    config.headers.authToken = token;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  NProgress.start()</div><div class="line">  return config</div><div class="line">&#125;, function(error) &#123;</div><div class="line">  return Promise.reject(error)</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<p>// 包含jwt请求内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">GET /qz/user/getRecords?page=1 HTTP/1.1</div><div class="line">Host: localhost:8088</div><div class="line">Connection: keep-alive</div><div class="line">Pragma: no-cache</div><div class="line">Cache-Control: no-cache</div><div class="line">Accept: application/json, text/plain, */*</div><div class="line">Origin: http://localhost:9999</div><div class="line">User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36</div><div class="line">authToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1MDY0MDgzODQyMzMsImlhdCI6MTUwNjQwNjU4NDIzMywianRpIjoiY2YzNzYyNzExNjQyNDg0MzhhYmNhNGRhNzIzN2I1M2IiLCJzdWIiOiIxIiwidXNlciI6eyJjQWRtaW4iOiIxIiwiY0VtYWlsIjoiYWRtaW5Ac3NzLnRvcCIsImNNb2JpbGVQaG9uZSI6IjEzMDAxNzEyMDk5IiwiY05tZSI6IuWNleeLrCIsImNQYXNzd2QiOiIxMjMiLCJjUGtJZCI6IjEiLCJjU2FsdCI6ImFkbWluIiwiY1N0YXR1cyI6IjEiLCJjVXNyTm1lIjoiYWRtaW4iLCJuQWdlIjoxMSwidENydERhdGUiOjE1MDA0MjkwOTYwMDAsInRMYXN0TG9naW5EYXRlIjoxNTA2NDA2MDcwMDAwLCJ0VXBkRGF0ZSI6MTUwNjQwNjA3MDAwMH19.PKO7NEf0lfStaZ/Nu61RjxGlWTEF5QS7vPjK7VvmTCo=</div><div class="line">Referer: http://localhost:9999/users/</div><div class="line">Accept-Encoding: gzip, deflate, br</div><div class="line">Accept-Language: zh-CN,zh;q=0.8,en;q=0.6</div></pre></td></tr></table></figure></p>
<ol>
<li>服务端验证token合法性并响应业务请求</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">@CrossOrigin // 跨域</div><div class="line">@RestController // Rest请求</div><div class="line">@RequestMapping(&quot;/user&quot;) // 作用域</div><div class="line">public class SysUserController &#123;</div><div class="line">    </div><div class="line">    @Autowired</div><div class="line">    private SysUserService sysUserServiceImpl; // 登录业务</div><div class="line"></div><div class="line">    /**</div><div class="line">     * &lt;b&gt;功能：退出&lt;/b&gt;&lt;br&gt;</div><div class="line">     * &lt;br&gt;</div><div class="line">     * @Author:pfyangf , 2017年9月18日</div><div class="line">     * @param user</div><div class="line">     * @return ResponseEntity&lt;ResultModel&gt;</div><div class="line">     **/</div><div class="line">    @RequestMapping(path=&quot;/getRecords&quot;, method = RequestMethod.GET) // </div><div class="line">    @Authorization</div><div class="line">    public ResponseEntity&lt;R&gt; getRecords(UserVO user) &#123;</div><div class="line">        R r = null;</div><div class="line">        try &#123;</div><div class="line">            r = sysUserServiceImpl.findByPage(user);</div><div class="line">        &#125; catch (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">            r = R.fail(&quot;系统内部异常,请稍后再试&quot;);</div><div class="line">        &#125;</div><div class="line">        return new ResponseEntity&lt;&gt;(r, HttpStatus.OK);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ol>
<li>客户端退出</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Vue.http.post(API.USER_LOGOUT).then(data =&gt; &#123;</div><div class="line">    commit(SET_TOKEN, &apos;&apos;);</div><div class="line">&#125;).catch(error =&gt; &#123;</div><div class="line">    commit(SET_TOKEN, &apos;&apos;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ol>
<li>服务端退出</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">@ApiOperation(value=&quot;退出登录&quot;, notes=&quot;&quot;)</div><div class="line">@RequestMapping(path=&quot;/logout&quot;, method = RequestMethod.POST)</div><div class="line">@Authorization</div><div class="line">public ResponseEntity&lt;R&gt; logout(@CurrentUser SysUser user) &#123;</div><div class="line">    </div><div class="line">    R r = null;</div><div class="line">    try &#123;</div><div class="line">        r = loginServiceImpl.logout(user.getCPkId());</div><div class="line">    &#125; catch (Exception e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">        r = R.fail(&quot;系统内部异常,请稍后再试&quot;);</div><div class="line">    &#125;</div><div class="line">    return new ResponseEntity&lt;&gt;(r, HttpStatus.OK);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public R logout(String userId) &#123;</div><div class="line">    R r = R.ok(&quot;退出成功&quot;);</div><div class="line">    if(StringUtils.isEmpty(userId))&#123;</div><div class="line">        r.change(500, &quot;用户编号不存在&quot;);</div><div class="line">    &#125; else &#123;</div><div class="line">    //  guavaTokenServiceImpl.deleteToken(userId);</div><div class="line">        jwtTokenServiceImpl.deleteToken(userId);</div><div class="line">    &#125;</div><div class="line">    return r;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public void deleteToken(String userId) &#123;</div><div class="line">    TokenStorageManager.getTokenStorage().remove(userId);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p><a href="https://jwt.io/" target="_blank" rel="external">jwt官网</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 技术向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 原创 </tag>
            
            <tag> 翻译 </tag>
            
            <tag> Tokens </tag>
            
            <tag> Json Web Token </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle Stream单表复制环境]]></title>
      <url>/2017/08/31/OracleStreamSingleTableDuplicate/</url>
      <content type="html"><![CDATA[<h2 id="1-实验环境"><a href="#1-实验环境" class="headerlink" title="1. 实验环境"></a>1. 实验环境</h2><blockquote>
<p>客户机 A</p>
<ol>
<li>OS: Redhat 5.1 x64</li>
<li>DB：Oracle 11G r2</li>
<li>SID： orcl</li>
</ol>
<p>客户机 B</p>
<ol>
<li>OS: Win7 x64</li>
<li>DB：Oracle 11G r2</li>
<li>SID： devtest</li>
</ol>
</blockquote>
<a id="more"></a>
<h2 id="2-要求配置"><a href="#2-要求配置" class="headerlink" title="2. 要求配置"></a>2. 要求配置</h2><h3 id="2-1-初始化参数的修改"><a href="#2-1-初始化参数的修改" class="headerlink" title="2.1 初始化参数的修改"></a>2.1 初始化参数的修改</h3><h4 id="2-1-1-global-names-必须设置为true，global-name-db-name-db-domain"><a href="#2-1-1-global-names-必须设置为true，global-name-db-name-db-domain" class="headerlink" title="2.1.1 global_names 必须设置为true，global_name=db_name+db_domain"></a>2.1.1 global_names 必须设置为true，global_name=db_name+db_domain</h4><ol>
<li><p>查看<code>db_domain</code>方法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SQL&gt; show parameter db_domain;</div></pre></td></tr></table></figure>
</li>
<li><p>修改<code>db_domain</code>方法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">  SQL&gt; alter system set db_domain = &apos;com&apos; scope=spfile;</div><div class="line">SQL&gt; shutdown immediate</div><div class="line">SQL&gt; startup</div><div class="line">SQL&gt; show parameter db_domain;</div></pre></td></tr></table></figure>
</li>
<li><p>查看<code>global_names</code>方法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">SQL&gt; show parameter global_name; #</div><div class="line">print&gt;</div><div class="line">NAME                                 TYPE        VALUE</div><div class="line">------------------------------------ ----------- ------------------------------</div><div class="line">global_names                         boolean     FALSE</div><div class="line"></div><div class="line">SQL&gt; select * from global_name;</div><div class="line">print&gt;</div><div class="line">GLOBAL_NAME</div><div class="line">------------------------------------------------------------------------------</div><div class="line">ORCL.LOCALDOMAIN</div></pre></td></tr></table></figure>
</li>
<li><p>修改<code>global_names</code></p>
<blockquote>
<p>修改后 客户端连接也要改 <code>DEVTEST.COM</code></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SQL&gt; alter system set global_names = true;</div><div class="line">SQL&gt; alter database rename global_name to DEVTEST.COM</div></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="2-1-2-job-queue-processes-必须-gt-2"><a href="#2-1-2-job-queue-processes-必须-gt-2" class="headerlink" title="2.1.2 job_queue_processes 必须&gt;2"></a>2.1.2 job_queue_processes 必须&gt;2</h4><blockquote>
<p><code>job_queue_processes</code> 设定job队列可以启动的进程数,该参数决定了job作业能够使用的总进程数</p>
</blockquote>
<ol>
<li><p>查看<code>job_queue_processes</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SQL&gt; show parameter job_queue_processes;</div></pre></td></tr></table></figure>
</li>
<li><p>修改<code>job_queue_processes</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SQL&gt; alter system set job_queue_processes=N;</div></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="2-1-3-compatible，必须高于10-2-0，并且target中该参数值不能低于source-database"><a href="#2-1-3-compatible，必须高于10-2-0，并且target中该参数值不能低于source-database" class="headerlink" title="2.1.3 compatible，必须高于10.2.0，并且target中该参数值不能低于source database."></a>2.1.3 compatible，必须高于10.2.0，并且target中该参数值不能低于source database.</h4><ol>
<li>查看兼容性参数<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SQL&gt; show parameter compatible;</div></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="2-1-3-streams-pool-size-指定适当的大小-建议不小于200M-，当然如果设置了sga-target，该参数也可由系统自动调节"><a href="#2-1-3-streams-pool-size-指定适当的大小-建议不小于200M-，当然如果设置了sga-target，该参数也可由系统自动调节" class="headerlink" title="2.1.3 streams_pool_size, 指定适当的大小 ( 建议不小于200M) ，当然如果设置了sga_target，该参数也可由系统自动调节"></a>2.1.3 streams_pool_size, 指定适当的大小 ( 建议不小于200M) ，当然如果设置了sga_target，该参数也可由系统自动调节</h4><ol>
<li><p>查看语句</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SQL&gt; show parameter streams_pool_size;</div></pre></td></tr></table></figure>
</li>
<li><p>修改语句</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SQL&gt; alter system set streams_pool_size=25m scope=spfile;</div></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="2-1-3-修改数据库时间格式（非必须）"><a href="#2-1-3-修改数据库时间格式（非必须）" class="headerlink" title="2.1.3 修改数据库时间格式（非必须）"></a>2.1.3 修改数据库时间格式（非必须）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">alter system set nls_date_format=&apos;YYYY-MM-DD HH24:MI:SS&apos; scope=spfile;</div></pre></td></tr></table></figure>
<h3 id="2-2-source数据库启用归档模式"><a href="#2-2-source数据库启用归档模式" class="headerlink" title="2.2 source数据库启用归档模式"></a>2.2 source数据库启用归档模式</h3><ol>
<li><p>创建归档日志地址</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&gt; mkdir /data/devtest/archivefile/</div></pre></td></tr></table></figure>
</li>
<li><p>配置开启归档模式</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">SQL&gt; alter system set log_archive_dest_1=&apos;LOCATION=/data/devtest/archivefile/&apos; scope=spfile;</div><div class="line">SQL&gt; alter system set log_archive_format=&apos;%t_%s_%r.arc&apos; scope=spfile;</div><div class="line">SQL&gt; shut immediate;</div><div class="line">SQL&gt; startup mount;</div><div class="line">SQL&gt; alter database archivelog;</div><div class="line">SQL&gt; alter database open;</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="2-3-互建Database-Link"><a href="#2-3-互建Database-Link" class="headerlink" title="2.3 互建Database Link"></a>2.3 互建Database Link</h3><ol>
<li><p>查看<code>DB_Link</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SQL&gt; select * from dba_db_links;</div></pre></td></tr></table></figure>
</li>
<li><p>删除<code>DB_Link</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SQL&gt; drop public database link ORCL_LOCALDOMAIN;</div></pre></td></tr></table></figure>
</li>
<li><p>创建<code>DB_Link</code></p>
<ul>
<li><p>在监听文件增加被链接库</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ORCL =</div><div class="line">(DESCRIPTION =</div><div class="line">  (ADDRESS_LIST =</div><div class="line">    (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.1.252)(PORT = 1521))</div><div class="line">  )</div><div class="line">  (CONNECT_DATA =</div><div class="line">    (SERVICE_NAME = orcl)</div><div class="line">  )</div><div class="line">)</div></pre></td></tr></table></figure>
</li>
<li><p>创建<code>DB_Link</code></p>
<blockquote>
<p>tip: 因为在之前设置了<code>global_names=true</code> 所以<code>database link</code>名称必须与被链接数据库<code>global_name</code>一致</p>
</blockquote>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"> SQL&gt; create public database link ORCL.LOCALDOMAIN connect to jwyc identified by</div><div class="line">jwyc using &apos;ORCL&apos;;</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="3-创建用户及搭建环境"><a href="#3-创建用户及搭建环境" class="headerlink" title="3. 创建用户及搭建环境"></a>3. 创建用户及搭建环境</h2><blockquote>
<p>通过更改命令行提示，来区分source库和target库操作<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SQL&gt; set sqlprompt &apos;barnch source&gt; &apos;; # 从</div><div class="line">SQL&gt; set sqlprompt &apos;center target&gt; &apos;; # 主</div></pre></td></tr></table></figure></p>
</blockquote>
<h3 id="3-1-创建一个专用于streams的表空间-和一个Streams管理员，并且将logminer的数据字典从system表空间转移到新建的表空间，防止撑满system表空间"><a href="#3-1-创建一个专用于streams的表空间-和一个Streams管理员，并且将logminer的数据字典从system表空间转移到新建的表空间，防止撑满system表空间" class="headerlink" title="3.1 创建一个专用于streams的表空间,和一个Streams管理员，并且将logminer的数据字典从system表空间转移到新建的表空间，防止撑满system表空间"></a>3.1 创建一个专用于streams的表空间,和一个Streams管理员，并且将logminer的数据字典从system表空间转移到新建的表空间，防止撑满system表空间</h3><ol>
<li>从库</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">barnch source&gt; create tablespace stream_tbs datafile &apos;F:/app/Administrator/orada</div><div class="line">ta/devtest/stream_tbs01.dbf&apos; size 100m autoextend on maxsize unlimited segment space management auto;</div><div class="line"></div><div class="line">表空间已创建。</div><div class="line"></div><div class="line">barnch source&gt; execute dbms_logmnr_d.set_tablespace(&apos;stream_tbs&apos;);</div><div class="line"></div><div class="line">PL/SQL 过程已成功完成。</div><div class="line"></div><div class="line">barnch source&gt; create user stradmin identified by stradmin default tablespace stream_tbs;</div><div class="line"></div><div class="line">用户已创建。</div><div class="line"></div><div class="line">barnch source&gt; grant dba to stradmin;</div><div class="line"></div><div class="line">授权成功。</div></pre></td></tr></table></figure>
<ol>
<li>主库</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">center target&gt; create tablespace stream_tbs datafile &apos;/u01/app/oracle/oradata/orcl/stream_tbs01.dbf&apos; size 100m autoextend on maxsize unlimited segment space management auto;</div><div class="line"></div><div class="line">Tablespace created.</div><div class="line"></div><div class="line">center target&gt; execute dbms_logmnr_d.set_tablespace(&apos;stream_tbs&apos;);</div><div class="line"></div><div class="line">PL/SQL procedure successfully completed.</div><div class="line"></div><div class="line">center target&gt; create user stradmin identified by stradmin default tablespace stream_tbs;</div><div class="line"></div><div class="line">User created.</div><div class="line"></div><div class="line">center target&gt; grant dba to stradmin;</div><div class="line"></div><div class="line">Grant succeeded.</div></pre></td></tr></table></figure>
<h3 id="3-2-创建队列"><a href="#3-2-创建队列" class="headerlink" title="3.2  创建队列"></a>3.2  创建队列</h3><ol>
<li>从库</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">barnch source&gt; exec dbms_streams_adm.set_up_queue();</div><div class="line"></div><div class="line">PL/SQL 过程已成功完成。</div></pre></td></tr></table></figure>
<ol>
<li>主库</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">center target&gt; exec dbms_streams_adm.set_up_queue();</div><div class="line"></div><div class="line">PL/SQL procedure successfully completed.</div></pre></td></tr></table></figure>
<h2 id="4-配置复制过程"><a href="#4-配置复制过程" class="headerlink" title="4 配置复制过程"></a>4 配置复制过程</h2><h3 id="4-1-首先到source数据库"><a href="#4-1-首先到source数据库" class="headerlink" title="4.1 首先到source数据库"></a>4.1 首先到source数据库</h3><ul>
<li><p>创建捕获规则</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">barnch source&gt; begin</div><div class="line">	</div><div class="line">	     dbms_streams_adm.add_table_rules(</div><div class="line">	</div><div class="line">	     table_name =&gt; &apos;jwyc.car_mot&apos;,</div><div class="line">	</div><div class="line">	     streams_type =&gt; &apos;capture&apos;,</div><div class="line">	</div><div class="line">	     streams_name =&gt; &apos;capture_stream&apos;,</div><div class="line">	</div><div class="line">	     queue_name =&gt; &apos;stradmin.streams_queue&apos;,</div><div class="line">	</div><div class="line">	     include_dml =&gt; true,</div><div class="line">	</div><div class="line">	     include_ddl =&gt; true,</div><div class="line">	</div><div class="line">	     inclusion_rule =&gt; true);</div><div class="line">	</div><div class="line">	  end;</div><div class="line">	  /</div><div class="line"></div><div class="line">PL/SQL 过程已成功完成。</div></pre></td></tr></table></figure>
</li>
<li><p>创建传播规则</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">barnch source&gt; begin</div><div class="line">  </div><div class="line">      dbms_streams_adm.add_table_propagation_rules(</div><div class="line">  </div><div class="line">      table_name =&gt; &apos;jwyc.car_mot&apos;,</div><div class="line">  </div><div class="line">      streams_name =&gt; &apos;sour_to_targ&apos;,</div><div class="line">  </div><div class="line">      source_queue_name =&gt; &apos;stradmin.streams_queue&apos;,</div><div class="line">  </div><div class="line">       destination_queue_name =&gt; &apos;stradmin.streams_queue@ORCL.LOCALDOMAIN&apos;,</div><div class="line">  </div><div class="line">       include_dml =&gt; true,</div><div class="line">  </div><div class="line">       include_ddl =&gt; true,</div><div class="line">  </div><div class="line">       source_database =&gt; &apos;DEVTEST.COM&apos;,</div><div class="line">  </div><div class="line">       inclusion_rule =&gt; true,</div><div class="line">  </div><div class="line">       queue_to_queue =&gt; true);</div><div class="line">  </div><div class="line">    end;</div><div class="line">    /</div><div class="line"></div><div class="line">  PL/SQL 过程已成功完成。</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="4-2-切换到target数据库"><a href="#4-2-切换到target数据库" class="headerlink" title="4.2 切换到target数据库"></a>4.2 切换到target数据库</h3><ul>
<li><p>创建应用规则</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">begin</div><div class="line"></div><div class="line"> dbms_streams_adm.add_table_rules(</div><div class="line"></div><div class="line"> table_name =&gt; &apos;jwyc.car_mot&apos;,</div><div class="line"></div><div class="line"> streams_type =&gt; &apos;apply&apos;,</div><div class="line"></div><div class="line"> streams_name =&gt; &apos;apply_stream&apos;,</div><div class="line"></div><div class="line"> queue_name =&gt; &apos;stradmin.streams_queue&apos;,</div><div class="line"></div><div class="line"> include_dml =&gt; true,</div><div class="line"></div><div class="line"> include_ddl =&gt; true,</div><div class="line"></div><div class="line"> source_database =&gt; &apos;DEVTEST.COM&apos;,</div><div class="line"></div><div class="line"> inclusion_rule =&gt; true);</div><div class="line"></div><div class="line">end;</div></pre></td></tr></table></figure>
</li>
<li><p>初始化数据</p>
</li>
<li><p>设置起始应用的scn值</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">DECLARE</div><div class="line"></div><div class="line">  iscn  NUMBER;</div><div class="line"></div><div class="line">  BEGIN</div><div class="line"></div><div class="line">  iscn := DBMS_FLASHBACK.GET_SYSTEM_CHANGE_NUMBER();</div><div class="line"></div><div class="line">  DBMS_APPLY_ADM.SET_TABLE_INSTANTIATION_SCN@ORCL.LOCALDOMAIN(</div><div class="line"></div><div class="line">  source_object_name    =&gt; &apos;jwyc.car_mot&apos;,</div><div class="line"></div><div class="line">  source_database_name  =&gt; &apos;DEVTEST.COM&apos;,</div><div class="line"></div><div class="line">  instantiation_scn     =&gt; iscn);</div><div class="line"></div><div class="line">END;</div></pre></td></tr></table></figure>
</li>
<li><p>启动应用进程</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">exec dbms_apply_adm.start_apply(&apos;apply_stream&apos;);</div><div class="line"></div><div class="line">select apply_name,status from dba_apply;</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="4-3-切换到source数据库，启动捕获进程"><a href="#4-3-切换到source数据库，启动捕获进程" class="headerlink" title="4.3 切换到source数据库，启动捕获进程"></a>4.3 切换到source数据库，启动捕获进程</h3><ul>
<li><p>启动捕获进程</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">exec dbms_capture_adm.start_capture(&apos;capture_stream&apos;);</div><div class="line"></div><div class="line">select capture_name,status from dba_capture;</div></pre></td></tr></table></figure></li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> 原创 </tag>
            
            <tag> Oracle Stream </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle安装先决条件配置]]></title>
      <url>/2017/08/31/OracleInstallPrevOnLinux/</url>
      <content type="html"><![CDATA[<h2 id="1-Oracle安装必需包安装"><a href="#1-Oracle安装必需包安装" class="headerlink" title="1. Oracle安装必需包安装"></a>1. Oracle安装必需包安装</h2><a id="more"></a>
<h3 id="1-1-必需软件包列表"><a href="#1-1-必需软件包列表" class="headerlink" title="1.1 必需软件包列表"></a>1.1 必需软件包列表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">binutils-2.20.51.0.2-5.11.el6 (x86_64)</div><div class="line">compat-libcap1-1.10-1 (x86_64)</div><div class="line">compat-libstdc++-33-3.2.3-69.el6 (x86_64)</div><div class="line">compat-libstdc++-33-3.2.3-69.el6.i686</div><div class="line">gcc-4.4.4-13.el6 (x86_64)</div><div class="line">gcc-c++-4.4.4-13.el6 (x86_64)</div><div class="line">glibc-2.12-1.7.el6 (i686)</div><div class="line">glibc-2.12-1.7.el6 (x86_64)</div><div class="line">glibc-devel-2.12-1.7.el6 (x86_64)</div><div class="line">glibc-devel-2.12-1.7.el6.i686</div><div class="line">ksh</div><div class="line">libgcc-4.4.4-13.el6 (i686)</div><div class="line">libgcc-4.4.4-13.el6 (x86_64)</div><div class="line">libstdc++-4.4.4-13.el6 (x86_64)</div><div class="line">libstdc++-4.4.4-13.el6.i686</div><div class="line">libstdc++-devel-4.4.4-13.el6 (x86_64)</div><div class="line">libstdc++-devel-4.4.4-13.el6.i686</div><div class="line">libaio-0.3.107-10.el6 (x86_64)</div><div class="line">libaio-0.3.107-10.el6.i686</div><div class="line">libaio-devel-0.3.107-10.el6 (x86_64)</div><div class="line">libaio-devel-0.3.107-10.el6.i686</div><div class="line">make-3.81-19.el6</div><div class="line">sysstat-9.0.4-11.el6 (x86_64)</div><div class="line"></div><div class="line">unixODBC-2.2.14-11.el6 (x86_64) or later</div><div class="line">unixODBC-2.2.14-11.el6.i686 or later</div><div class="line">unixODBC-devel-2.2.14-11.el6 (x86_64) or later</div><div class="line">unixODBC-devel-2.2.14-11.el6.i686 or later</div></pre></td></tr></table></figure>
<h3 id="1-2-检查方法"><a href="#1-2-检查方法" class="headerlink" title="1.2 检查方法"></a>1.2 检查方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&gt; rpm -qa|grep &lt;package name&gt;</div></pre></td></tr></table></figure>
<h3 id="1-3-安装方法"><a href="#1-3-安装方法" class="headerlink" title="1.3 安装方法"></a>1.3 安装方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt; yum install -y &lt;package name&gt; # 在线安装</div><div class="line">&gt; rpm -ivh &lt;full-package name&gt; # 手动下载rpm包离线安装</div></pre></td></tr></table></figure>
<h2 id="2-Oracle-用户和用户组"><a href="#2-Oracle-用户和用户组" class="headerlink" title="2. Oracle 用户和用户组"></a>2. Oracle 用户和用户组</h2><h3 id="2-1-检测文件"><a href="#2-1-检测文件" class="headerlink" title="2.1 检测文件"></a>2.1 检测文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&gt; vim /etc/oraInst.loc  # 1. 新增配置文件</div><div class="line">#  contents</div><div class="line">inventory_loc=/u01/app/oraInventory</div><div class="line">inst_group=oinstall</div></pre></td></tr></table></figure>
<h3 id="2-2-新建用户和用户组"><a href="#2-2-新建用户和用户组" class="headerlink" title="2.2 新建用户和用户组"></a>2.2 新建用户和用户组</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># 建组</div><div class="line">&gt; /usr/sbin/groupadd oinstall</div><div class="line">&gt; /usr/sbin/groupadd dba</div><div class="line"># 建用户</div><div class="line">&gt; /usr/sbin/useradd -g oinstall -G dba oracle</div><div class="line">&gt; passwd oracle</div></pre></td></tr></table></figure>
<h2 id="3-配置系统参数"><a href="#3-配置系统参数" class="headerlink" title="3. 配置系统参数"></a>3. 配置系统参数</h2><h3 id="3-1-内核参数"><a href="#3-1-内核参数" class="headerlink" title="3.1 内核参数"></a>3.1 内核参数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&gt; vim /etc/sysctl.conf</div></pre></td></tr></table></figure>
<blockquote>
<p>请注意 以下参数可能在<code>sysctl.conf</code>已经出现，只需要添加不存在的即可，在<code>vim</code>中命令模式下输入<code>\</code>后跟单词即可搜索全文<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">fs.aio-max-nr = 1048576</div><div class="line">fs.file-max = 6815744</div><div class="line">kernel.shmall = 2097152</div><div class="line">kernel.shmmax = 536870912</div><div class="line">kernel.shmmni = 4096</div><div class="line">kernel.sem = 250 32000 100 128</div><div class="line">net.ipv4.ip_local_port_range = 9000 65500</div><div class="line">net.core.rmem_default = 262144</div><div class="line">net.core.rmem_max = 4194304</div><div class="line">net.core.wmem_default = 262144</div><div class="line">net.core.wmem_max = 1048576</div></pre></td></tr></table></figure></p>
<p>指定用户组创建<code>shared memory segments</code>权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo 501 &gt; /proc/sys/vm/hugetlb_shm_group</div></pre></td></tr></table></figure></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&gt;  /sbin/sysctl -p # 使生效</div></pre></td></tr></table></figure>
<h3 id="3-2-修改资源使用资源限制文件"><a href="#3-2-修改资源使用资源限制文件" class="headerlink" title="3.2 修改资源使用资源限制文件"></a>3.2 修改资源使用资源限制文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&gt; vim /etc/security/limits.conf</div><div class="line">oracle soft nproc 2047</div><div class="line">oracle hard nproc 16384</div><div class="line">oracle soft nofile 1024</div><div class="line">oracle hard nofile 65536</div></pre></td></tr></table></figure>
<h2 id="4-创建安装目录"><a href="#4-创建安装目录" class="headerlink" title="4. 创建安装目录"></a>4. 创建安装目录</h2><h3 id="4-1-创建目录"><a href="#4-1-创建目录" class="headerlink" title="4.1 创建目录"></a>4.1 创建目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&gt; mkdir -pm 755 /u01/app # 新建并修改默认权限目录</div><div class="line">&gt; chown -R oracle:oinstall /u01/app/ # 修改拥有人</div><div class="line">&gt; mkdir -pm 755 /u01/oraInventory</div><div class="line">&gt; chown oracle:oinstall /u01/oraInventory/</div></pre></td></tr></table></figure>
<h3 id="4-2-配置用户环境变量"><a href="#4-2-配置用户环境变量" class="headerlink" title="4.2 配置用户环境变量"></a>4.2 配置用户环境变量</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&gt; vim /home/oracle/.bash_profile</div><div class="line">export ORACLE_SID=orcl</div><div class="line">export ORACLE_HOME=/u01/app/oracle/product/11.2.0/dbhome_1</div><div class="line">export PATH=$ORACLE_HOME/bin:$PATH</div><div class="line">export LD_LIBRARY_PATH=$ORACLE_HOME/lib:$LD_LIBRARY_PATH</div></pre></td></tr></table></figure>
<h2 id="5-禁用selinux"><a href="#5-禁用selinux" class="headerlink" title="5.  禁用selinux"></a>5.  禁用<code>selinux</code></h2><blockquote>
<p>不禁用的话在使用<code>sqlplus</code>时会有一些奇葩的问题，所以…</p>
</blockquote>
<h3 id="5-1-将SELINUX-enforcing修改成SELINUX-disabled"><a href="#5-1-将SELINUX-enforcing修改成SELINUX-disabled" class="headerlink" title="5.1 将SELINUX=enforcing修改成SELINUX=disabled"></a>5.1 将<code>SELINUX=enforcing</code>修改成<code>SELINUX=disabled</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt; vim etc/selinux/config</div><div class="line">SELINUX=disabled</div></pre></td></tr></table></figure>
<blockquote>
<p>引用：<a href="http://docs.oracle.com/cd/E11882_01/install.112/e24326.pdf#pdfjs.action=download" target="_blank" rel="external">Oracle install guide</a></p>
</blockquote>
]]></content>
      
        
        <tags>
            
            <tag> 原创 </tag>
            
            <tag> Oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS配置yum源]]></title>
      <url>/2017/08/31/ConfigYumRepoOnRHEL/</url>
      <content type="html"><![CDATA[<h2 id="1-添加centos源文件"><a href="#1-添加centos源文件" class="headerlink" title="1. 添加centos源文件"></a>1. 添加centos源文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/yum.repos.d/centos.repo</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="2-修改网易源"><a href="#2-修改网易源" class="headerlink" title="2. 修改网易源"></a>2. 修改网易源</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">[base]</div><div class="line">name=CentOS-$releasever - Base</div><div class="line">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch</div><div class="line">&amp;repo=os</div><div class="line">baseurl=http://mirrors.163.com/centos/6/os/i386/</div><div class="line">gpgcheck=1</div><div class="line">gpgkey=http://mirrors.163.com/centos/6/os/i386/RPM-GPG-KEY-CentOS-6</div><div class="line"></div><div class="line">#released updates</div><div class="line">[updates]</div><div class="line">name=CentOS-$releasever - Updates</div><div class="line">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch</div><div class="line">&amp;repo=updates</div><div class="line">baseurl=http://mirrors.163.com/centos/6/updates/i386/</div><div class="line">gpgcheck=1</div><div class="line">gpgkey=http://mirrors.163.com/centos/6/os/i386/RPM-GPG-KEY-CentOS-6</div><div class="line"></div><div class="line">#additional packages that may be useful</div><div class="line">[extras]</div><div class="line">name=CentOS-$releasever - Extras</div><div class="line">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch</div><div class="line">&amp;repo=extras</div><div class="line">baseurl=http://mirrors.163.com/centos/6/extras/i386/</div><div class="line">gpgcheck=1</div><div class="line">gpgkey=http://mirrors.163.com/centos/6/os/i386/RPM-GPG-KEY-CentOS-6</div><div class="line"></div><div class="line">#additional packages that extend functionality of existing packages</div><div class="line">[centosplus]</div><div class="line">name=CentOS-$releasever - Plus</div><div class="line">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch</div><div class="line">&amp;repo=centosplus</div><div class="line">baseurl=http://mirrors.163.com/centos/6/centosplus/i386/</div><div class="line">gpgcheck=1</div><div class="line">enabled=0</div><div class="line">gpgkey=http://mirrors.163.com/centos/6/os/i386/RPM-GPG-KEY-CentOS-6</div><div class="line"></div><div class="line">#contrib - packages by Centos Users</div><div class="line">[contrib]</div><div class="line">name=CentOS-$releasever - Contrib</div><div class="line">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch</div><div class="line">&amp;repo=contrib</div><div class="line">baseurl=http://mirrors.163.com/centos/6/contrib/i386/</div><div class="line">gpgcheck=1</div><div class="line">enabled=0</div><div class="line">gpgkey=http://mirrors.163.com/centos/6/os/i386/RPM-GPG-KEY-CentOS-6</div></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> 原创 </tag>
            
            <tag> CentOS </tag>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux修改时区]]></title>
      <url>/2017/08/31/LinuxModifyTimeZone/</url>
      <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&gt; tzselect # 时区选择工具</div><div class="line">&gt; 5 # 5) Asia</div><div class="line">&gt; 9 # 9) China</div><div class="line">&gt; 1 # 1) east China - Beijing, Guangdong, Shanghai, etc.</div><div class="line">&gt; 1 # 1) Yes</div><div class="line"></div><div class="line">&gt; vim /etc/sysconfig/clock</div><div class="line">ZONE=Asia/Shanghai</div><div class="line">&gt; rm /etc/localtime</div><div class="line">&gt; ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</div><div class="line">&gt; reboot</div></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> 原创 </tag>
            
            <tag> CentOS </tag>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux学习之Tomcat的基本操作]]></title>
      <url>/2017/08/31/TomcatSimpleOperateOnLinux/</url>
      <content type="html"><![CDATA[<h2 id="1-常用快捷键"><a href="#1-常用快捷键" class="headerlink" title="1. 常用快捷键"></a>1. 常用快捷键</h2><ul>
<li><code>Ctrl+C</code> 取消当前的操作</li>
<li><code>Ctrl+D</code> 退出当前的模式</li>
<li><code>Tab</code> 补全命令</li>
</ul>
<a id="more"></a>
<h2 id="2-常用命令"><a href="#2-常用命令" class="headerlink" title="2. 常用命令"></a>2. 常用命令</h2><ul>
<li><code>ls</code>查看指定目录（linux上的目录即windows上的文件夹）下的内容</li>
<li><code>cd</code>切换到指定目录<ol>
<li>绝对路径 即完整路径，比如你想进入Tomcat目录，假设你处在<code>/</code>根目录下面，那么，你可以通过<code>cd</code>加完整目录的形式进入该目录，即：<code>cd /usr/local/devtools/$tomcat/</code>进入到tomcat文件夹</li>
<li>相对路径 即相对与当前目录的路径，假设你已经在tomcat目录里，你想进入他的配置文件夹<code>conf</code>，那么你就可以直接<code>cd conf</code></li>
</ol>
</li>
<li><code>mkdir</code> 新建目录（文件夹）<ol>
<li><code>-p</code> 需要时创建目标目录的上层目录，但即使这些目录已存在也不当作错误处理</li>
</ol>
</li>
<li><code>cp</code> 将源文件复制至目标文件，或将多个源文件复制至目标目录<ol>
<li><code>-f</code> 如果目标文件无法打开则将其移除并重试</li>
<li><code>-R</code>,<code>-r</code> 递归复制目录及其子目录内的所有内容</li>
</ol>
</li>
<li><code>rm</code> 删除文件（慎用）<ol>
<li><code>-f</code> 强制删除</li>
<li><code>-r</code>, <code>-R</code> 递归删除目录及其内容</li>
</ol>
</li>
<li><code>mv</code> 将源文件重命名为目标文件，或将源文件移动至指定目录<ol>
<li><code>-i</code> 覆盖前询问</li>
</ol>
</li>
<li><code>tar</code> 用来压缩和解压文件。tar本身不具有压缩功能，他是调用压缩功能实现的<ol>
<li><code>tar -czvf ar_test.tar.gz ar_test</code> 将<code>ar_test</code>里的内容打包压缩成<code>ar_test.tar.gz</code></li>
<li><code>tar zxvf ar_test.tar.gz</code> 解压<code>ar_test.tar.gz</code>到当前目录</li>
</ol>
</li>
<li><code>ps</code> 在<code>Linux</code>系统上的进程查看命令<ol>
<li><code>ps -ef</code>   #显示所有进程的UID,PPIP,C与STIME栏位</li>
</ol>
</li>
<li><code>kill</code>发送指定的信号到相应进程。不指定信号将发送SIGTERM（15）终止指定进程。若仍无法终止该程序可用“-KILL” 参数，其发送的信号为SIGKILL(9) ，将强制结束进程，使用ps命令或者jobs 命令可以查看进程号。root用户将影响用户的进程，非root用户只能影响自己的进程</li>
<li><code>tail</code> 输出文件的末尾部分<ol>
<li><code>-f</code> 当文件增长时,输出后续添加的数据</li>
</ol>
</li>
</ul>
<h2 id="3-具体操作"><a href="#3-具体操作" class="headerlink" title="3. 具体操作"></a>3. 具体操作</h2><ul>
<li><p>关停服务器<br>  1.通过<code>Tomcat</code>自带的执行文件(注：<code>.sh</code>文件是<code>Linux</code>上的可执行文件，执行方法是在文件名之前加<code>./</code>)</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/bin# ./shutdown.sh</div></pre></td></tr></table></figure>
<p>  2.通过杀进程（一般在<code>shutdown.sh</code>关不掉<code>Tomcat</code>的情况下使用）</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># ps -ef|grep tomcat # 查看有关于tomcat的进程信息</div><div class="line"># kill -9 4178  # 杀死指定的Tomcat进程 -9 是信号 4178是查出来的进程id</div><div class="line"># ps -ef|grep tomcat # 检查一遍</div></pre></td></tr></table></figure>
</li>
<li><p>备份项目</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">/webapps# tar -zcvf ROOT.tar.gz ROOT # 压缩项目</div><div class="line">/webapps# mkdir -p ../../backup/20151015_01 #新建备份目录</div><div class="line">/webapps# mv ROOT.tar.gz  ../../backup/20151015_01/ # 移动文件</div></pre></td></tr></table></figure>
</li>
<li><p>更换项目</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/webapps# tar -zxvf ROOT.tar.gz # 解压项目</div></pre></td></tr></table></figure>
</li>
<li><p>删除历史缓存文件</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/work# rm -rf Catalina* # 删除缓存文件</div></pre></td></tr></table></figure>
</li>
<li><p>启动服务器</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/bin# ./startup.sh # 启动tomcat</div></pre></td></tr></table></figure>
</li>
<li><p>查看日志</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/logs# tail -f catalina.out #动态查看启动日志</div></pre></td></tr></table></figure></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 技术向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 原创 </tag>
            
            <tag> CentOS </tag>
            
            <tag> Linux </tag>
            
            <tag> Tomcat </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[通过Fiddler4拦截Eclipse中部署的Tomcat的请求]]></title>
      <url>/2017/08/31/captureTomcatRequsetByFiddler4/</url>
      <content type="html"><![CDATA[<p>1.双击<code>Servers</code>面板中需要对其进行请求拦截的<code>Tomcat</code>,打开其配置页面</p>
<p>2.点击<code>Open launch configuration</code>准备设置其运行时配置</p>
<p>3.切换到<code>Arguments</code>页面,在<code>VM arguments</code>输入框中追加设置代理参数</p>
<pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-Dhttp.proxySet=&quot;true&quot; -Dhttp.proxyHost=&quot;127.0.0.1&quot; -Dhttp.proxyPort=&quot;8888&quot;</div></pre></td></tr></table></figure>
</code></pre><p>4.在上一步的代理端口要与<code>Fiddler</code>中配置的相同,可以在<code>Tools</code> - <code>Fiddler Options</code> - <code>connections</code>面板中查看</p>
]]></content>
      
        <categories>
            
            <category> 技术向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 原创 </tag>
            
            <tag> Java </tag>
            
            <tag> Eclipse </tag>
            
            <tag> Fiddler </tag>
            
            <tag> Tomcat </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Git提交冲突处理]]></title>
      <url>/2017/08/29/gitDealDiff/</url>
      <content type="html"><![CDATA[<h2 id="1-本地更新文件时存在冲突"><a href="#1-本地更新文件时存在冲突" class="headerlink" title="1. 本地更新文件时存在冲突"></a>1. 本地更新文件时存在冲突</h2><a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">Administrator@yangpf MINGW64 /d/JIYW_2016SD01_JDQYWL/highlight_spring4 (master)</div><div class="line">$ git pull</div><div class="line">Auto-merging src/main/java/com/wisely/highlight_spring4/ch1/profile/ProfileConfig.java</div><div class="line">CONFLICT (add/add): Merge conflict in src/main/java/com/wisely/highlight_spring4/ch1/profile/ProfileConfig.java</div><div class="line">Auto-merging src/main/java/com/wisely/highlight_spring4/ch1/profile/Main.java</div><div class="line">CONFLICT (add/add): Merge conflict in src/main/java/com/wisely/highlight_spring4/ch1/profile/Main.java</div><div class="line">Auto-merging src/main/java/com/wisely/highlight_spring4/ch1/profile/DemoBean.java</div><div class="line">CONFLICT (add/add): Merge conflict in src/main/java/com/wisely/highlight_spring4/ch1/profile/DemoBean.java</div><div class="line">Automatic merge failed; fix conflicts and then commit the result.</div></pre></td></tr></table></figure>
<h2 id="2-使用merge命令合并文件-报错-提示存在不能合并的文件"><a href="#2-使用merge命令合并文件-报错-提示存在不能合并的文件" class="headerlink" title="2. 使用merge命令合并文件 报错 提示存在不能合并的文件"></a>2. 使用<code>merge</code>命令合并文件 报错 提示存在不能合并的文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Administrator@yangpf MINGW64 /d/JIYW_2016SD01_JDQYWL/highlight_spring4 (master|MERGING)</div><div class="line">$ git merge</div><div class="line">error: merge is not possible because you have unmerged files.</div><div class="line">hint: Fix them up in the work tree, and then use &apos;git add/rm &lt;file&gt;&apos;</div><div class="line">hint: as appropriate to mark resolution and make a commit.</div><div class="line">fatal: Exiting because of an unresolved conflict.</div><div class="line"></div><div class="line">Administrator@yangpf MINGW64 /d/JIYW_2016SD01_JDQYWL/highlight_spring4 (master|MERGING)</div></pre></td></tr></table></figure>
<h2 id="3-获取更新"><a href="#3-获取更新" class="headerlink" title="3. 获取更新"></a>3. 获取更新</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git fetch</div><div class="line"></div><div class="line">Administrator@yangpf MINGW64 /d/JIYW_2016SD01_JDQYWL/highlight_spring4 (master|MERGING)</div></pre></td></tr></table></figure>
<h2 id="4-在文件上解决冲突-然后采用合并工具进行合并处理"><a href="#4-在文件上解决冲突-然后采用合并工具进行合并处理" class="headerlink" title="4. 在文件上解决冲突,然后采用合并工具进行合并处理"></a>4. 在文件上解决冲突,然后采用合并工具进行合并处理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">$ get mergetool</div><div class="line">bash: get: command not found</div><div class="line"></div><div class="line">Administrator@yangpf MINGW64 /d/JIYW_2016SD01_JDQYWL/highlight_spring4 (master|MERGING)</div><div class="line">$ git mergetool</div><div class="line"></div><div class="line">This message is displayed because &apos;merge.tool&apos; is not configured.</div><div class="line">See &apos;git mergetool --tool-help&apos; or &apos;git help config&apos; for more details.</div><div class="line">&apos;git mergetool&apos; will now attempt to use one of the following tools:</div><div class="line">opendiff kdiff3 tkdiff xxdiff meld tortoisemerge gvimdiff diffuse diffmerge ecmerge p4                                                                                              merge araxis bc codecompare emerge vimdiff</div><div class="line">Merging:</div><div class="line">src/main/java/com/wisely/highlight_spring4/ch1/profile/DemoBean.java</div><div class="line">src/main/java/com/wisely/highlight_spring4/ch1/profile/Main.java</div><div class="line">src/main/java/com/wisely/highlight_spring4/ch1/profile/ProfileConfig.java</div><div class="line"></div><div class="line">Normal merge conflict for &apos;src/main/java/com/wisely/highlight_spring4/ch1/profile/DemoBean.java&apos;:</div><div class="line">  &#123;local&#125;: created file</div><div class="line">  &#123;remote&#125;: created file</div><div class="line">Hit return to start merge resolution tool (tortoisemerge):</div><div class="line">tortoisemerge cannot be used without a base</div><div class="line">merge of src/main/java/com/wisely/highlight_spring4/ch1/profile/DemoBean.java failed</div><div class="line">Continue merging other unresolved paths (y/n) ? y</div><div class="line"></div><div class="line">Normal merge conflict for &apos;src/main/java/com/wisely/highlight_spring4/ch1/profile/Main.java&apos;:</div><div class="line">  &#123;local&#125;: created file</div><div class="line">  &#123;remote&#125;: created file</div><div class="line">Hit return to start merge resolution tool (tortoisemerge): tortoisemerge</div><div class="line">tortoisemerge cannot be used without a base</div><div class="line">merge of src/main/java/com/wisely/highlight_spring4/ch1/profile/Main.java failed</div><div class="line">Continue merging other unresolved paths (y/n) ? y</div><div class="line"></div><div class="line">Normal merge conflict for &apos;src/main/java/com/wisely/highlight_spring4/ch1/profile/ProfileConfig.java&apos;:</div><div class="line">  &#123;local&#125;: created file</div><div class="line">  &#123;remote&#125;: created file</div><div class="line">Hit return to start merge resolution tool (tortoisemerge): tortoisemerge</div><div class="line">tortoisemerge cannot be used without a base</div><div class="line">merge of src/main/java/com/wisely/highlight_spring4/ch1/profile/ProfileConfig.java failed</div><div class="line">Continue merging other unresolved paths (y/n) ? y</div><div class="line"></div><div class="line">Administrator@yangpf MINGW64 /d/JIYW_2016SD01_JDQYWL/highlight_spring4 (master|MERGING)</div></pre></td></tr></table></figure>
<h2 id="5-查看本地git状态"><a href="#5-查看本地git状态" class="headerlink" title="5. 查看本地git状态"></a>5. 查看本地git状态</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">$ git status</div><div class="line">On branch master</div><div class="line">Your branch and &apos;origin/master&apos; have diverged,</div><div class="line">and have 2 and 2 different commits each, respectively.</div><div class="line">  (use &quot;git pull&quot; to merge the remote branch into yours)</div><div class="line">You have unmerged paths.</div><div class="line">  (fix conflicts and run &quot;git commit&quot;)</div><div class="line"></div><div class="line">Changes to be committed:</div><div class="line"></div><div class="line">        new file:   src/main/java/com/wisely/highlight_spring4/ch1/event/DemoEvent.java</div><div class="line">        new file:   src/main/java/com/wisely/highlight_spring4/ch1/event/DemoListener.java</div><div class="line">        new file:   src/main/java/com/wisely/highlight_spring4/ch1/event/DemoPublisher.java</div><div class="line">        new file:   src/main/java/com/wisely/highlight_spring4/ch1/event/EventConfig.java</div><div class="line">        new file:   src/main/java/com/wisely/highlight_spring4/ch1/event/Main.java</div><div class="line"></div><div class="line">Unmerged paths:</div><div class="line">  (use &quot;git add &lt;file&gt;...&quot; to mark resolution)</div><div class="line"></div><div class="line">        both added:      src/main/java/com/wisely/highlight_spring4/ch1/profile/DemoBean.java</div><div class="line">        both added:      src/main/java/com/wisely/highlight_spring4/ch1/profile/Main.java</div><div class="line">        both added:      src/main/java/com/wisely/highlight_spring4/ch1/profile/ProfileConfig.java</div><div class="line"></div><div class="line">Changes not staged for commit:</div><div class="line">  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)</div><div class="line">  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)</div><div class="line"></div><div class="line">        modified:   target/classes/META-INF/maven/com.wisely/highlight_spring4/pom.pro                                                                                              perties</div><div class="line"></div><div class="line"></div><div class="line">Administrator@yangpf MINGW64 /d/JIYW_2016SD01_JDQYWL/highlight_spring4 (master|MERGING)</div></pre></td></tr></table></figure>
<h2 id="6-尝试提交-这里没有add-故报错"><a href="#6-尝试提交-这里没有add-故报错" class="headerlink" title="6. 尝试提交(这里没有add 故报错)"></a>6. 尝试提交(这里没有add 故报错)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$ git commit -m &quot;merge&quot;</div><div class="line">U       src/main/java/com/wisely/highlight_spring4/ch1/profile/DemoBean.java</div><div class="line">U       src/main/java/com/wisely/highlight_spring4/ch1/profile/Main.java</div><div class="line">U       src/main/java/com/wisely/highlight_spring4/ch1/profile/ProfileConfig.java</div><div class="line">error: commit is not possible because you have unmerged files.</div><div class="line">hint: Fix them up in the work tree, and then use &apos;git add/rm &lt;file&gt;&apos;</div><div class="line">hint: as appropriate to mark resolution and make a commit.</div><div class="line">fatal: Exiting because of an unresolved conflict.</div><div class="line"></div><div class="line">Administrator@yangpf MINGW64 /d/JIYW_2016SD01_JDQYWL/highlight_spring4 (master|MERGING)</div><div class="line">$ ^C</div><div class="line"></div><div class="line">Administrator@yangpf MINGW64 /d/JIYW_2016SD01_JDQYWL/highlight_spring4 (master|MERGING)</div></pre></td></tr></table></figure>
<h2 id="7-add后重新提交"><a href="#7-add后重新提交" class="headerlink" title="7. add后重新提交"></a>7. add后重新提交</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$ git add *</div><div class="line">warning: LF will be replaced by CRLF in src/main/java/com/wisely/highlight_spring4/ch1/profile/DemoBean.java.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in src/main/java/com/wisely/highlight_spring4/ch1/profile/ProfileConfig.java.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">The following paths are ignored by one of your .gitignore files:</div><div class="line">target</div><div class="line">Use -f if you really want to add them.</div><div class="line"></div><div class="line">Administrator@yangpf MINGW64 /d/JIYW_2016SD01_JDQYWL/highlight_spring4 (master|MERGING)</div></pre></td></tr></table></figure>
<h2 id="8-提交成功"><a href="#8-提交成功" class="headerlink" title="8. 提交成功"></a>8. 提交成功</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">$ git commit -m &quot;merge&quot;</div><div class="line">[master 0d7fbd8] merge</div><div class="line"></div><div class="line">Administrator@yangpf MINGW64 /d/JIYW_2016SD01_JDQYWL/highlight_spring4 (master)</div><div class="line">$ ll</div><div class="line">total 5</div><div class="line">-rw-r--r-- 1 Administrator 197121 1907 十一 26 09:02 pom.xml</div><div class="line">-rw-r--r-- 1 Administrator 197121   18 十二  6 12:48 README.md</div><div class="line">drwxr-xr-x 1 Administrator 197121    0 十一 26 03:35 src/</div><div class="line">drwxr-xr-x 1 Administrator 197121    0 十一 26 03:35 target/</div><div class="line"></div><div class="line">Administrator@yangpf MINGW64 /d/JIYW_2016SD01_JDQYWL/highlight_spring4 (master)</div><div class="line">$ git status</div><div class="line">On branch master</div><div class="line">Your branch is ahead of &apos;origin/master&apos; by 3 commits.</div><div class="line">  (use &quot;git push&quot; to publish your local commits)</div><div class="line">nothing to commit, working directory clean</div><div class="line"></div><div class="line">Administrator@yangpf MINGW64 /d/JIYW_2016SD01_JDQYWL/highlight_spring4 (master)</div></pre></td></tr></table></figure>
<h2 id="9-推送至远程仓库"><a href="#9-推送至远程仓库" class="headerlink" title="9. 推送至远程仓库"></a>9. 推送至远程仓库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">$ git push</div><div class="line">warning: push.default is unset; its implicit value has changed in</div><div class="line">Git 2.0 from &apos;matching&apos; to &apos;simple&apos;. To squelch this message</div><div class="line">and maintain the traditional behavior, use:</div><div class="line"></div><div class="line">  git config --global push.default matching</div><div class="line"></div><div class="line">To squelch this message and adopt the new behavior now, use:</div><div class="line"></div><div class="line">  git config --global push.default simple</div><div class="line"></div><div class="line">When push.default is set to &apos;matching&apos;, git will push local branches</div><div class="line">to the remote branches that already exist with the same name.</div><div class="line"></div><div class="line">Since Git 2.0, Git defaults to the more conservative &apos;simple&apos;</div><div class="line">behavior, which only pushes the current branch to the corresponding</div><div class="line">remote branch that &apos;git pull&apos; uses to update the current branch.</div><div class="line"></div><div class="line">See &apos;git help config&apos; and search for &apos;push.default&apos; for further information.</div><div class="line">(the &apos;simple&apos; mode was introduced in Git 1.7.11. Use the similar mode</div><div class="line">&apos;current&apos; instead of &apos;simple&apos; if you sometimes use older versions of Git)</div><div class="line"></div><div class="line">Counting objects: 61, done.</div><div class="line">Delta compression using up to 2 threads.</div><div class="line">Compressing objects: 100% (42/42), done.</div><div class="line">Writing objects: 100% (61/61), 6.69 KiB | 0 bytes/s, done.</div><div class="line">Total 61 (delta 17), reused 0 (delta 0)</div><div class="line">To https://git.coding.net/pengfei/highlight_spring4.git</div><div class="line">   c6d9102..0d7fbd8  master -&gt; master</div><div class="line"></div><div class="line">Administrator@yangpf MINGW64 /d/JIYW_2016SD01_JDQYWL/highlight_spring4 (master)</div></pre></td></tr></table></figure>
<h2 id="10-检查更新"><a href="#10-检查更新" class="headerlink" title="10. 检查更新"></a>10. 检查更新</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ git pull</div><div class="line">Already up-to-date.</div><div class="line"></div><div class="line">Administrator@yangpf MINGW64 /d/JIYW_2016SD01_JDQYWL/highlight_spring4 (master)</div><div class="line">$ git status</div><div class="line">On branch master</div><div class="line">Your branch is up-to-date with &apos;origin/master&apos;.</div><div class="line">nothing to commit, working directory clean</div></pre></td></tr></table></figure>
<p>OVER</p>
]]></content>
      
        <categories>
            
            <category> 技术向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 原创 </tag>
            
            <tag> Git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Nginx 小例子]]></title>
      <url>/2017/08/28/NginxSomeExample/</url>
      <content type="html"><![CDATA[<h3 id="1-根据请求的域名选择不同的Server块配置"><a href="#1-根据请求的域名选择不同的Server块配置" class="headerlink" title="1. 根据请求的域名选择不同的Server块配置"></a>1. 根据请求的域名选择不同的Server块配置</h3><p>Host:</p>
<blockquote>
<ul>
<li>本地: 192.168.0.221 </li>
<li>虚拟机: 192.168.0.222</li>
</ul>
</blockquote>
<p>Servers:</p>
<blockquote>
<ul>
<li>4个Tomcat在本地 </li>
<li>1个Nginx在虚拟机</li>
</ul>
</blockquote>
<a id="more"></a>
<ol>
<li>修改本地hosts文件</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">192.168.0.222 pf.com</div><div class="line">192.168.0.222 p1.pf.com</div><div class="line">192.168.0.222 p2.pf.com</div><div class="line">192.168.0.222 p3.pf.com</div><div class="line">192.168.0.222 p4.pf.com</div></pre></td></tr></table></figure>
<ol>
<li>在<code>nginx/html</code>目录下键测试网页文件</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@localhost nginx]# ls html/</div><div class="line">50x.html  index.html  p1  p2  p3  p4</div><div class="line">[root@localhost nginx]# ls html/p1</div><div class="line">index.html</div></pre></td></tr></table></figure>
<p><code>html</code>文件内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</div><div class="line">    &lt;title&gt;P1&lt;/title&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">    &lt;h1&gt;welcome to P1&lt;/h1&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<p>3.Nginx.conf配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    listen       80;</div><div class="line">    server_name  p1.pf.com; # 匹配Request Header中的Host</div><div class="line"></div><div class="line">    location / &#123;                       </div><div class="line">        root   html/p1;                   </div><div class="line">        index  index.html index.htm;   </div><div class="line">    &#125;                                  </div><div class="line">    </div><div class="line">    error_page   500 502 503 504  /50x.html;</div><div class="line">    location = /50x.html &#123;</div><div class="line">        root   html;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">server &#123;</div><div class="line">    listen       80;</div><div class="line">    server_name  p2.pf.com;</div><div class="line"></div><div class="line">    location / &#123;                       </div><div class="line">        root   html/p2;                   </div><div class="line">        index  index.html index.htm;   </div><div class="line">    &#125;                                  </div><div class="line">    </div><div class="line">    error_page   500 502 503 504  /50x.html;</div><div class="line">    location = /50x.html &#123;</div><div class="line">        root   html;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ol>
<li>访问测试</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">http://pf.com/</div><div class="line">http://p1.pf.com/</div><div class="line">http://p2.pf.com/</div></pre></td></tr></table></figure>
<h3 id="2-查看反代中不同的请求地址"><a href="#2-查看反代中不同的请求地址" class="headerlink" title="2. 查看反代中不同的请求地址"></a>2. 查看反代中不同的请求地址</h3><p>继续使用上次配置的测试环境</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">Tomcat:</div><div class="line">http://192.168.0.221:8080/a1</div><div class="line">http://192.168.0.221:9080/a1</div><div class="line"></div><div class="line">Nginx:</div><div class="line">http://192.168.0.222/a1/</div><div class="line"></div><div class="line">客户端地址:</div><div class="line">192.168.0.221</div></pre></td></tr></table></figure>
<p>修改<code>JSP</code>文件,追加</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">request.getRemoteAddr(): &lt;%=request.getRemoteAddr() %&gt; &lt;br&gt;</div><div class="line">request.getHeader(&quot;WL-Proxy-Client-IP&quot;): &lt;%=request.getHeader(&quot;WL-Proxy-Client-IP&quot;) %&gt; &lt;br&gt;</div><div class="line">request.getHeader(&quot;Proxy-Client-IP&quot;): &lt;%=request.getHeader(&quot;Proxy-Client-IP&quot;) %&gt; &lt;br&gt;</div><div class="line">request.getHeader(&quot;x-forwarded-for&quot;): &lt;%=request.getHeader(&quot;x-forwarded-for&quot;) %&gt; &lt;br&gt;</div></pre></td></tr></table></figure>
<p>其中,<code>Proxy-Client-IP</code> 字段和 <code>WL-Proxy-Client-IP</code> 字段只在 Apache（Weblogic Plug-In Enable）+WebLogic 搭配下出现，其中“WL” 就是 WebLogic 的缩写<br><code>x-forwarded-for</code> 简称 XFF 头 ，只有在通过了 HTTP 代理或者负载均衡服务器时才会添加该项<br><code>REMOTE_ADDR</code>是客户端跟服务器“握手”时的IP,对于未使用反代软件时可获取客户端IP</p>
<ol>
<li>认情况下反向代理是不会转发请求中的Host头部,服务端只能获取代理服务器的Ip地址<br>配置<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">location ^~ /a1 &#123;</div><div class="line">    proxy_pass http://tomcats;</div><div class="line"></div><div class="line">    #proxy_set_header Host $host:$server_port;</div><div class="line">    #proxy_set_header X-Real-IP $remote_addr;</div><div class="line">    #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>请求</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://192.168.0.222/a1/</div></pre></td></tr></table></figure>
<p>响应</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">request.getRemoteAddr(): 192.168.0.222 </div><div class="line">request.getHeader(&quot;WL-Proxy-Client-IP&quot;): null </div><div class="line">request.getHeader(&quot;Proxy-Client-IP&quot;): null </div><div class="line">request.getHeader(&quot;x-forwarded-for&quot;): null</div></pre></td></tr></table></figure>
<ol>
<li>在请求中设置真实的IP地址</li>
</ol>
<p>配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">location ^~ /a1 &#123;</div><div class="line">    proxy_pass http://tomcats;</div><div class="line"></div><div class="line">    proxy_set_header Host $host:$server_port;</div><div class="line">    proxy_set_header X-Real-IP $remote_addr;</div><div class="line">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>请求</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://192.168.0.222/a1/</div></pre></td></tr></table></figure>
<p>响应</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">request.getRemoteAddr(): 192.168.0.222 </div><div class="line">request.getHeader(&quot;WL-Proxy-Client-IP&quot;): null </div><div class="line">request.getHeader(&quot;Proxy-Client-IP&quot;): null </div><div class="line">request.getHeader(&quot;x-forwarded-for&quot;): 192.168.0.221</div></pre></td></tr></table></figure>
<ol>
<li>在请求中设置真实的端口</li>
</ol>
<p>JSP追加</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">request.getServerPort(): &lt;%=request.getServerPort() %&gt; &lt;br&gt;</div></pre></td></tr></table></figure>
<p>配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">listen       7080;</div><div class="line"></div><div class="line">location ^~ /a1 &#123;</div><div class="line">    proxy_pass http://tomcats;</div><div class="line"></div><div class="line">    proxy_set_header Host $host; # :$server_port</div><div class="line">    proxy_set_header X-Real-IP $remote_addr;</div><div class="line">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>请求</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://192.168.0.222:7080/a1/</div></pre></td></tr></table></figure>
<p>响应</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">request.getRemoteAddr(): 192.168.0.222 </div><div class="line">request.getHeader(&quot;WL-Proxy-Client-IP&quot;): null </div><div class="line">request.getHeader(&quot;Proxy-Client-IP&quot;): null </div><div class="line">request.getHeader(&quot;x-forwarded-for&quot;): 192.168.0.221 </div><div class="line">request.getServerPort(): 80</div></pre></td></tr></table></figure>
<p>修改配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">location ^~ /a1 &#123;</div><div class="line">    proxy_pass http://tomcats;</div><div class="line"></div><div class="line">    proxy_set_header Host $host:$server_port;</div><div class="line">    proxy_set_header X-Real-IP $remote_addr;</div><div class="line">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>响应</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">request.getRemoteAddr(): 192.168.0.222 </div><div class="line">request.getHeader(&quot;WL-Proxy-Client-IP&quot;): null </div><div class="line">request.getHeader(&quot;Proxy-Client-IP&quot;): null </div><div class="line">request.getHeader(&quot;x-forwarded-for&quot;): 192.168.0.221 </div><div class="line">request.getServerPort(): 7080</div></pre></td></tr></table></figure>
<h3 id="3-Nginx反代谷歌"><a href="#3-Nginx反代谷歌" class="headerlink" title="3. Nginx反代谷歌"></a>3. Nginx反代谷歌</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    listen 80;</div><div class="line">    server_name shenshenshou.top;</div><div class="line">    rewrite ^(.*) https://shenshenshou.top$1 permanent;</div><div class="line">&#125;</div><div class="line"></div><div class="line">server &#123;</div><div class="line">        listen       443;</div><div class="line">        server_name  shenshenshou.top;</div><div class="line">        ssl on;</div><div class="line">        ssl_certificate      cert/214101960730977.pem;</div><div class="line">        ssl_certificate_key  cert/214101960730977.key;</div><div class="line"></div><div class="line">        location / &#123;</div><div class="line"></div><div class="line">            proxy_redirect off; # 取消页面重定向的做法</div><div class="line">            proxy_cookie_domain google.com shenshenshou.top; # 把cookie的作用域替换成我们的域名</div><div class="line">            proxy_pass https://www.google.com; # 上游服务器地址</div><div class="line">            proxy_connect_timeout 60s;</div><div class="line">            proxy_read_timeout 5400s;</div><div class="line">            proxy_send_timeout 5400s;</div><div class="line">            </div><div class="line">            proxy_set_header Host &quot;www.google.com&quot;;</div><div class="line">            proxy_set_header User-Agent $http_user_agent;</div><div class="line">            proxy_set_header Referer https://www.google.com;</div><div class="line">            proxy_set_header Accept-Encoding &quot;&quot;;</div><div class="line">            proxy_set_header X-Real-IP $remote_addr; </div><div class="line">            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; </div><div class="line">            proxy_set_header X-Forwarded-Proto https;</div><div class="line">            proxy_set_header Accept-Language &quot;zh-CN&quot;; # 设置语言为中文</div><div class="line">            proxy_set_header Cookie &quot;PREF=ID=047808f19f6de346:U=0f62f33dd8549d11:FF=2:LD=en-US:NW=1:TM=1325338577:LM=1332142444:GM=1:SG=2:S=rE0SyJh2W1IQ-Maw&quot;;</div><div class="line">            # 传固定的cookie给谷歌，是为了禁止即时搜索，因为开启即时搜索无法替换内容。还有设置为新窗口打开网站，这个符合我们打开链接的习惯</div><div class="line">            sub_filter https://www.google.com.hk shenshenshou.top; # 把谷歌的域名替换成我们的</div><div class="line">            sub_filter https://www.google.com shenshenshou.top; # 把谷歌的域名替换成我们的</div><div class="line">            </div><div class="line">            sub_filter_once off; # 意思是只查找并替换一次。on是开启此功能，off是关闭——默认值是on</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h3 id="4-负载均衡配置"><a href="#4-负载均衡配置" class="headerlink" title="4. 负载均衡配置"></a>4. 负载均衡配置</h3><h4 id="1-权重配置"><a href="#1-权重配置" class="headerlink" title="1. 权重配置"></a>1. 权重配置</h4><p><code>upstream</code>配置</p>
<p><code>weight</code>用来配置权重,默认是1,权重越高分配给这台服务器的请求就越多.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">upstream tomcats &#123;</div><div class="line">    server 192.168.0.221:6080;</div><div class="line">    server 192.168.0.221:7080 weight=1;</div><div class="line">    server 192.168.0.221:8080 weight=3;</div><div class="line">    server 192.168.0.221:9080 weight=5;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="2-负载均衡算法"><a href="#2-负载均衡算法" class="headerlink" title="2. 负载均衡算法"></a>2. 负载均衡算法</h4><p>1&gt; <code>ip_hash</code>根据客户IP进行负载均衡,即相同的IP将负载到同一个upstream server,<br>经测试同一个网段的也会负载到同一个upstream server</p>
<p>2&gt; 当其中一台机器不可用时,可以使用<code>down</code>参数标识.确保转发策略的一惯性</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">upstream tomcats &#123;</div><div class="line">    ip_hash;</div><div class="line">    server 192.168.0.221:6080;</div><div class="line">    server 192.168.0.221:7080;</div><div class="line">    server 192.168.0.221:8080 down;</div><div class="line">    server 192.168.0.221:9080;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 技术向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 原创 </tag>
            
            <tag> nginx </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Nginx 简单整理]]></title>
      <url>/2017/08/28/NginxSimpleCollect/</url>
      <content type="html"><![CDATA[<h2 id="1-特色说明"><a href="#1-特色说明" class="headerlink" title="1. 特色说明"></a>1. 特色说明</h2><ol>
<li>Nginx (“engine x”) 是一个高性能的 HTTP 和 反向代理 服务器，也是一个 IMAP/POP3/SMTP 代理服务器。</li>
<li>作为Web服务器，nginx处理静态文件、索引文件以及自动索引效率非常高</li>
<li>作为代理服务器，Nginx可以实现无缓存的反向代理加速，提高网站运行速度</li>
<li>作为负载均衡服务器，Nginx既可以在内部直接支持Rails和PHP，也可以支持HTTP代理服务器，对外进行服务。同时支持简单的容错和利用算法进行负载均衡</li>
<li>在高可用性方面，Nginx支持热部署，启动速度特别迅速，因此可以在不间断服务的情况下，对软件版本或者配置进行升级，即使运行数月也无需重新启动，几乎可以做到7×24小时的不间断运行。</li>
</ol>
<a id="more"></a>
<h2 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h2><h3 id="2-1-Linux环境下安装"><a href="#2-1-Linux环境下安装" class="headerlink" title="2.1 Linux环境下安装"></a>2.1 <code>Linux</code>环境下安装</h3><ol>
<li>安装位置<br>源码目录:/usr/local/devtools<br>安装目录:/opt/nginx<br>cpu核心数:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@iZ28af1xn4uZ devtools]# grep &apos;core id&apos; /proc/cpuinfo | sort -u | wc -l</div><div class="line">1</div></pre></td></tr></table></figure>
<ol>
<li>安装软件必需环境<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">rpm -qa|grep gcc # 检查有木有</div><div class="line">yum install -y gcc # 没有的话就安装(centos)</div><div class="line">apt-get install -y gcc # ubuntu</div></pre></td></tr></table></figure>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">1. gcc gcc-c++</div><div class="line">2. pcre pcre-devel</div><div class="line">3. zlib zlib-devel</div><div class="line">4. openssl openssl-devel</div></pre></td></tr></table></figure>
<ol>
<li>内核参数优化<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/sysctl.conf # 编辑配置文件</div></pre></td></tr></table></figure>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">fs.file-max = 999999</div><div class="line">net.ipv4.tcp_tw_reuse = 1</div><div class="line">net.ipv4.tcp_keepalive_time = 600</div><div class="line">net.ipv4.tcp_fin_timeout = 30</div><div class="line">net.ipv4.tcp_max_tw_buckets = 5000</div><div class="line">net.ipv4.ip_local_port_range = 1024 61000</div><div class="line">net.ipv4.tcp_rmem = 4096 32768 262142</div><div class="line">net.ipv4.tcp_wmem = 4096 32768 262142</div><div class="line">net.core.netdev_max_backlog = 8096</div><div class="line">net.core.rmem_default = 262144</div><div class="line">net.core.wmem_default = 262144</div><div class="line">net.core.rmem_max = 2097152</div><div class="line">net.core.wmem_max = 2097152</div><div class="line">net.ipv4.tcp_syncookies = 1</div><div class="line">net.ipv4.tcp_max_syn.backlog=1024</div></pre></td></tr></table></figure>
<ol>
<li>安装<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">cd nginx-1.4.7</div><div class="line">./configure --prefix=/opt/nginx </div><div class="line">make </div><div class="line">make install</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="2-2-Windows环境下安装"><a href="#2-2-Windows环境下安装" class="headerlink" title="2.2 Windows环境下安装"></a>2.2 <code>Windows</code>环境下安装</h3><ol>
<li><a href="http://nginx.org/en/download.html" target="_blank" rel="external">下载</a>解压，绿色版直接用</li>
</ol>
<h2 id="3-常用命令"><a href="#3-常用命令" class="headerlink" title="3. 常用命令"></a>3. 常用命令</h2><ol>
<li><p>启动</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">/nginx # 默认读取配置文件启动</div><div class="line">/nginx -c /pathtoconfig/nginx.conf # 读取指定配置文件启动（建议使用默认的配置文件，配置文件多了时间长会弄混）</div><div class="line">/nginx -p /pathtonginx/nginx # 指定Nginxi的安装目录</div><div class="line">/nginx -g &quot;pid /var/nginx/test.pid&quot; # 临时指定全局配置项并生效（实例：把pid写入test.pid文件中）</div></pre></td></tr></table></figure>
</li>
<li><p>检验配置文件是否有误</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/nginx -t</div></pre></td></tr></table></figure>
</li>
<li><p>查看版本或参数</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">/nginx -v # 显示Nginx版本信息</div><div class="line">/nginx -V # 先死编译阶段参数 就是configure时的参数</div></pre></td></tr></table></figure>
</li>
<li><p>停止服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">/nginx -s stop # 强杀master进程</div><div class="line">/nginx -s quit # 正常处理完当前请求再关闭服务</div></pre></td></tr></table></figure>
</li>
<li><p>重载配置项</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/nginx -s reload # 使运行中的Nginx服务重载nginx.conf配置文件（下午我说错了 纠正）</div></pre></td></tr></table></figure>
</li>
<li><p>平滑升级（linux）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">a. kill -s SIGUSR2 &lt;nginx master pid&gt; # 重命名nginx的pid文件，如将/usr/local/nginx/logs/nginx.pid -&gt; nginx.pid.oldbin 这样新的nginx才有可能启动成功</div><div class="line">b. 启动新版本的nginx</div><div class="line">c. kill -s SIGQUIT &lt;nginx master pid&gt; # 以“优雅”的方式关闭旧版本Nginx，随后只有新版本Nginx服务运行</div></pre></td></tr></table></figure>
</li>
</ol>
<p><a href="https://www.nginx.com/resources/wiki/start/topics/tutorials/commandline/" target="_blank" rel="external">官方wiki</a></p>
<h2 id="4-常用配置说明"><a href="#4-常用配置说明" class="headerlink" title="4. 常用配置说明"></a>4. 常用配置说明</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">#user  nobody; # 指定Nginx Worker进程运行用户以及用户组，默认nobody</div><div class="line">worker_processes  1; # 指定Nginx要开启的进程数，如果是多核 CPU，建议指定CPU的数量</div><div class="line"></div><div class="line">#error_log  logs/error.log; # 定义全局错误日志文件，级别：debug、info、notice、warn、error、crit（可以参照log4j理解）</div><div class="line">#error_log  logs/error.log  notice;</div><div class="line">#error_log  logs/error.log  info;</div><div class="line"></div><div class="line">#pid        logs/nginx.pid; # master 进程 Id存储位置</div><div class="line"></div><div class="line"></div><div class="line">events &#123;</div><div class="line">    worker_connections  1024; # Nginx每个进程的最大连接数，默认1024</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">http &#123;</div><div class="line">    include       mime.types;</div><div class="line">    default_type  application/octet-stream;</div><div class="line"></div><div class="line">    # 定义Nginx日志的输出格式</div><div class="line">    #log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</div><div class="line">    #                  &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</div><div class="line">    #                  &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</div><div class="line"></div><div class="line">    #访问日志存放路径</div><div class="line">    #access_log  logs/access.log  main;</div><div class="line"></div><div class="line">    sendfile        on; #开启高效文件传输模式。需要把tcp_nopush和tcp_nodelay设置为on，防止网络阻塞</div><div class="line">    #tcp_nopush     on;</div><div class="line"></div><div class="line">    #keepalive_timeout  0;</div><div class="line">    keepalive_timeout  65;#设置客户端连接保持活动的超时时间，超时之后，服务器关闭该连接</div><div class="line"></div><div class="line">    #gzip  on;#开启或关闭gzip模块</div><div class="line"></div><div class="line">    server &#123;</div><div class="line">        listen       80; #Nginx监听端口</div><div class="line">        server_name  localhost; #指定IP地址或域名，多个域名用空格分开</div><div class="line"></div><div class="line">        #charset koi8-r; #设置网页的默认编码格式 一般utf-8</div><div class="line"></div><div class="line">        #access_log  logs/host.access.log  main;</div><div class="line"></div><div class="line">        # 通过过滤用户请求的url来确定是否走该配置块</div><div class="line">        location / &#123;</div><div class="line">            root   html; # 映射访问的本地目录 相对路径或绝对路径</div><div class="line">            index  index.html index.htm; # index设定访问的默认首页地址</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        #error_page  404              /404.html;</div><div class="line"></div><div class="line">        # redirect server error pages to the static page /50x.html</div><div class="line">        #</div><div class="line">        error_page   500 502 503 504  /50x.html;</div><div class="line">        location = /50x.html &#123;</div><div class="line">            root   html;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        # proxy the PHP scripts to Apache listening on 127.0.0.1:80</div><div class="line">        #</div><div class="line">        #location ~ \.php$ &#123;</div><div class="line">        #    proxy_pass   http://127.0.0.1;</div><div class="line">        #&#125;</div><div class="line"></div><div class="line">        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</div><div class="line">        #</div><div class="line">        #location ~ \.php$ &#123;</div><div class="line">        #    root           html;</div><div class="line">        #    fastcgi_pass   127.0.0.1:9000;</div><div class="line">        #    fastcgi_index  index.php;</div><div class="line">        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</div><div class="line">        #    include        fastcgi_params;</div><div class="line">        #&#125;</div><div class="line"></div><div class="line">        # deny access to .htaccess files, if Apache&apos;s document root</div><div class="line">        # concurs with nginx&apos;s one</div><div class="line">        #</div><div class="line">        #location ~ /\.ht &#123;</div><div class="line">        #    deny  all;</div><div class="line">        #&#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    # another virtual host using mix of IP-, name-, and port-based configuration</div><div class="line">    #</div><div class="line">    #server &#123;</div><div class="line">    #    listen       8000;</div><div class="line">    #    listen       somename:8080;</div><div class="line">    #    server_name  somename  alias  another.alias;</div><div class="line"></div><div class="line">    #    location / &#123;</div><div class="line">    #        root   html;</div><div class="line">    #        index  index.html index.htm;</div><div class="line">    #    &#125;</div><div class="line">    #&#125;</div><div class="line"></div><div class="line">    # HTTPS server</div><div class="line">    #</div><div class="line">    #server &#123;</div><div class="line">    #    listen       443 ssl;</div><div class="line">    #    server_name  localhost;</div><div class="line"></div><div class="line">    #    ssl_certificate      cert.pem;</div><div class="line">    #    ssl_certificate_key  cert.key;</div><div class="line"></div><div class="line">    #    ssl_session_cache    shared:SSL:1m;</div><div class="line">    #    ssl_session_timeout  5m;</div><div class="line"></div><div class="line">    #    ssl_ciphers  HIGH:!aNULL:!MD5;</div><div class="line">    #    ssl_prefer_server_ciphers  on;</div><div class="line"></div><div class="line">    #    location / &#123;</div><div class="line">    #        root   html;</div><div class="line">    #        index  index.html index.htm;</div><div class="line">    #    &#125;</div><div class="line">    #&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="5-反向代理"><a href="#5-反向代理" class="headerlink" title="5. 反向代理"></a>5. 反向代理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># 上游服务器列表</div><div class="line">upstream tomcats &#123;</div><div class="line">    server 127.0.0.1:8080; # 指定后端服务器的IP地址和端口</div><div class="line">    server 127.0.0.1:9080;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">location ^~ /a1 &#123;</div><div class="line">    proxy_pass http://tomcats; # 负载均衡(upstream)名称</div><div class="line"></div><div class="line">    #proxy_set_header:设置由后端的服务器获取用户的主机名或者真实IP地址，以及代理者的真实IP地址</div><div class="line">    proxy_set_header Host $host:$server_port; # 客户端真实ip和端口号</div><div class="line">    proxy_set_header X-Real-IP $remote_addr;</div><div class="line">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="6-docker-主机命令"><a href="#6-docker-主机命令" class="headerlink" title="6 docker 主机命令"></a>6 docker 主机命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ docker-machine start # 开机</div><div class="line">$ docker-machine stop # 关机</div><div class="line">$ docker-machine restart # 重启</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 技术向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 原创 </tag>
            
            <tag> nginx </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Docker在日常开发中的应用]]></title>
      <url>/2017/08/28/DockerInDevApply/</url>
      <content type="html"><![CDATA[<h2 id="Docker在日常开发中的应用"><a href="#Docker在日常开发中的应用" class="headerlink" title="Docker在日常开发中的应用"></a>Docker在日常开发中的应用</h2><p>开发时可能会在开发机器上装各种各样的容器，对开发机器造成的压力较大，我们可以采用docker的方式，用来处理各种开发环境的管理。docker对win10之前的系统版本并不友好，推荐使用win10机器安装docker</p>
<h3 id="docker命令"><a href="#docker命令" class="headerlink" title="docker命令"></a><code>docker</code>命令</h3><p><code>docker search 镜像名</code>: 搜索容器镜像</p>
<p><code>docker pull 镜像名</code>: 下载镜像</p>
<p><code>docker images</code>: 查看本地所有镜像</p>
<a id="more"></a>
<p><code>docker ps</code>: 查看启动的容器列表</p>
<p><code>docker ps -a</code>: 查看所有的容器列表</p>
<p><code>docker run 参数</code>: 启动容器</p>
<p><code>docker start 容器名/容器编号</code>: 启动容器</p>
<p><code>docker stop 容器名/容器编号</code>: 关闭容器</p>
<p><code>docker exec 容器名/容器编号</code>: 进入容器shell </p>
<p><code>docker cp 拷贝文件 容器名称:容器物理文件路径</code>: 从本地系统拷贝文件到容器</p>
<h3 id="样例：在docker中导入数据库备份"><a href="#样例：在docker中导入数据库备份" class="headerlink" title="样例：在docker中导入数据库备份"></a>样例：在docker中导入数据库备份</h3><h4 id="1-进入启动数据库"><a href="#1-进入启动数据库" class="headerlink" title="1. 进入启动数据库"></a>1. 进入启动数据库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">docker run --name xe -d -p 9090:9090 -p 1521:1521 wnameless/oracle-xe-11g </div><div class="line">或</div><div class="line">docker start xe</div></pre></td></tr></table></figure>
<h4 id="2-查询数据文件存放位置"><a href="#2-查询数据文件存放位置" class="headerlink" title="2. 查询数据文件存放位置"></a>2. 查询数据文件存放位置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">select b.file_name 物理文件名,</div><div class="line">       b.tablespace_name 表空间,</div><div class="line">       b.bytes / 1024 / 1024 大小M,</div><div class="line">       (b.bytes - sum(nvl(a.bytes, 0))) / 1024 / 1024 已使用M,</div><div class="line">       substr((b.bytes - sum(nvl(a.bytes, 0))) / (b.bytes) * 100, 1, 5) 利用率</div><div class="line">  from dba_free_space a, dba_data_files b</div><div class="line"> where a.file_id = b.file_id</div><div class="line"> group by b.tablespace_name, b.file_name, b.bytes</div><div class="line"> order by b.tablespace_name;</div></pre></td></tr></table></figure>
<h4 id="3-创建表空间以及用户"><a href="#3-创建表空间以及用户" class="headerlink" title="3. 创建表空间以及用户"></a>3. 创建表空间以及用户</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">CREATE TABLESPACE SPK_DATA DATAFILE &apos;/u01/app/oracle/oradata/XE/SPK_DATA.dbf&apos;</div><div class="line">SIZE 1073740</div><div class="line">AUTOEXTEND ON NEXT 104857600 MAXSIZE 512M</div><div class="line">LOGGING ONLINE PERMANENT BLOCKSIZE 8192</div><div class="line">EXTENT MANAGEMENT LOCAL AUTOALLOCATE DEFAULT</div><div class="line">NOCOMPRESS SEGMENT SPACE MANAGEMENT AUTO;</div><div class="line">create user spk identified by spk default tablespace SPK_DATA;</div><div class="line">grant execute on sys.DBMS_CRYPTO to spk;</div><div class="line">grant connect to spk;</div><div class="line">grant resource to spk;</div><div class="line">grant create view to spk;</div><div class="line">grant debug any procedure to spk;</div><div class="line">grant debug connect session to spk;</div><div class="line">grant unlimited tablespace to spk;</div><div class="line">grant dba to spk;</div></pre></td></tr></table></figure>
<h4 id="4-SSH登录docker容器"><a href="#4-SSH登录docker容器" class="headerlink" title="4. SSH登录docker容器"></a>4. SSH登录docker容器</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker exec -ti b5bb9f8850d1 /bin/bash</div></pre></td></tr></table></figure>
<h4 id="5-将数据库备份文件导入容器中"><a href="#5-将数据库备份文件导入容器中" class="headerlink" title="5. 将数据库备份文件导入容器中"></a>5. 将数据库备份文件导入容器中</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker cp spk0309.DMP xe:/u01/app/oracle/oradata/XE/bak</div></pre></td></tr></table></figure>
<h4 id="6-创建目录以及授权"><a href="#6-创建目录以及授权" class="headerlink" title="6. 创建目录以及授权"></a>6. 创建目录以及授权</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkdir bak</div><div class="line">create directory bak as &apos;/u01/app/oracle/oradata/XE/bak&apos;;</div><div class="line">grant read, write on directory bak  to public;</div></pre></td></tr></table></figure>
<h4 id="7-修改数据库文件所属用户"><a href="#7-修改数据库文件所属用户" class="headerlink" title="7. 修改数据库文件所属用户"></a>7. 修改数据库文件所属用户</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chown oracle:dba spk0309.DMP</div></pre></td></tr></table></figure>
<h4 id="8-导入数据"><a href="#8-导入数据" class="headerlink" title="8. 导入数据"></a>8. 导入数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">impdp spk/spk DIRECTORY=bak DUMPFILE=spk0309.DMP logfile=spk0309.log</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 技术向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 原创 </tag>
            
            <tag> docker </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在windows7上安装Docker Toolbox]]></title>
      <url>/2017/08/25/Install-Docker-Toolbox-on-Windows/</url>
      <content type="html"><![CDATA[<blockquote>
<p>传统桌面系统解决方案. Docker Toolbox是为不符合<a href="https://docs.docker.com/docker-for-mac/" target="_blank" rel="external">Docker for Mac</a>和<a href="https://docs.docker.com/docker-for-windows/" target="_blank" rel="external">Docker for Windows</a>安装要求的老版Windows和Mac系统准备的. 如果可以的话,还是建议尽快将老版操作系统升级.</p>
</blockquote>
<p>Docker Toolbox 为不满足Docker最低系统安装要求的老版系统提供了一个使用Docker的方式.</p>
<p>如果你还没有准备好,请首先下载安装文件:<a href="https://download.docker.com/win/stable/DockerToolbox.exe" target="_blank" rel="external">Get Docker Toolbox for Windows</a></p>
<a id="more"></a>
<h2 id="安装文件内容及安装方式"><a href="#安装文件内容及安装方式" class="headerlink" title="安装文件内容及安装方式"></a>安装文件内容及安装方式</h2><p>Docker Toolbox包含下面的Docker工具</p>
<ul>
<li>运行Docker引擎来创建镜像和容器的Docker CLI客户端</li>
<li>可以在windows终端中运行docker 引擎命令的Docker Machine</li>
<li>运行<code>docker-compose</code>命令的Docker Compose</li>
<li><code>Kitematic</code> Docker图形化管理界面</li>
<li>预先配置Docker命令行运行环境的Docker GetStart shell脚本</li>
<li>Oracle VM 虚拟机</li>
</ul>
<p>由于Docker引擎守护进程使用了Linux特有的内容功能,故我们不能直接在windows主机上直接运行docker. 相反, 我们需要使用 Docker Machine命令工具<code>docker-machine</code>,在windows主机上创建一个小的Linux VM内核, 该内核就是Docker引擎在windows主机运行的基础.</p>
<blockquote>
<p>新系统的一个优势就是可以直接使用本地的虚拟化环境,而不需要在本机上安装VirtualBox来运行docker</p>
</blockquote>
<h2 id="第一步-检查系统版本"><a href="#第一步-检查系统版本" class="headerlink" title="第一步:检查系统版本"></a>第一步:检查系统版本</h2><p>为了运行docker, 你的主机必须安装了64位的win7或其他更高的操作系统,此外,你必须保证你已经启用了本机的虚拟化环境(virtualization ,一般在BIOS里对该项进行启用或禁用).</p>
<h2 id="第二步-安装-Docker-Toolbox"><a href="#第二步-安装-Docker-Toolbox" class="headerlink" title="第二步:安装 Docker Toolbox"></a>第二步:安装 Docker Toolbox</h2><p>在这一部分,你将安装Docker Toolbox软件以及几个辅助性软件. 在安装过程中你的主机将会安装以下软件.</p>
<ul>
<li>windows版本的docker客户端</li>
<li>Docker Toolbox管理工具以及镜像文件</li>
<li>Oracle VM虚拟机</li>
<li>GIT unix工具</li>
</ul>
<p>如果你本地之前已经安装了VM虚拟机的其他版本,无需重复安装该虚拟机,当出现提示时,取消勾选该安装选项即可.</p>
<p>如果你的Virtual Box正在运行,请在你安装Docker Toolbox之前关闭该虚拟机</p>
<ol>
<li>打开<a href="https://www.docker.com/products/docker-toolbox" target="_blank" rel="external">Docker toolbox</a>主页</li>
<li>点击安装包下载链接开始下载</li>
<li>下载完成后双击安装包开始安装<br> 安装程序会打开一个弹出窗口引导用户安装<br> 如果你的windows安全弹窗询问你是否允许该程序时,请选择<code>yes</code>. 安装界面会展示<code>Setup - Docker Toolbox for Windows</code>引导.<br> <img src="https://docs.docker.com/toolbox/images/installer_open.png" alt="image"></li>
<li>点击<code>Next</code>同意默认安装选项并开始安装</li>
<li>当windows安全程序通知该安装程序会对系统做一些改变,请点击允许.<br> 当安装成功,安装程序会报告安装成功<br><img src="https://docs.docker.com/toolbox/images/finish.png" alt="image"></li>
<li>取消勾选”View Shortcuts in File Explorer”,点击<code>Finish</code>完成安装</li>
</ol>
<h2 id="第三步-安装确认"><a href="#第三步-安装确认" class="headerlink" title="第三步:安装确认"></a>第三步:安装确认</h2><p>安装完成后,Docker Toolbox和VirtualBox将会出现在你的应用程序安装文件夹.在这一步你可以启动Docker Toolbox并运行一个Docker 命令实例</p>
<ol>
<li>在你的桌面找到Docker Toolbox图标<br><img src="https://docs.docker.com/toolbox/images/icon-set.png" alt="sss"></li>
<li>点击<code>Docker Toolbox terminal</code>图标<br> 这个终端会为你的Docker Toolbox配置一个地方,配置完成时终端会展示一个<code>$</code>提示.(我在这一步失败了,点击弹窗报错,怀疑是环境变量没配置好,右键属性发现它通过bash.exe执行安装目录的start.sh文件,看了下没看懂,不过直接点击start.sh发现可以配置成功并启动docker,可以暂时使用这种方式使用.以后找到问题会反馈.)</li>
</ol>
<h2 id="第四步-使用Kitematic-Alpha-管理你的docker"><a href="#第四步-使用Kitematic-Alpha-管理你的docker" class="headerlink" title="第四步:使用Kitematic (Alpha)管理你的docker"></a>第四步:使用<code>Kitematic (Alpha)</code>管理你的docker</h2><pre><code>使用start.sh启动docker之后,打开Kitematic (Alpha)程序,在日常开发中可以使用图形化界面来进行进行镜像和容器的获取与管理.
</code></pre><blockquote>
<p><a href="https://docs.docker.com/toolbox/toolbox_install_windows/" target="_blank" rel="external">原文地址</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 技术向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> docker </tag>
            
            <tag> 翻译 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Spring jdbcTemplate 调用 Oracle 存储过程]]></title>
      <url>/2017/08/25/SpringJDBCTemplateCallProduce/</url>
      <content type="html"><![CDATA[<p>偶尔,我们需要在数据库中处理一些东西,所以在写的程序中操作存储过程也是必须用到的一部分.下面就举一个在SpringTemplate下调用存储过程的小例子</p>
<a id="more"></a>
<script src="//git.oschina.net/pengfeii/Demo-Resp/star_widget_preview"></script>

<h4 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h4><blockquote>
<p>需求: 有一个雇员表,里面有一个deptNo字段标识部门,我想查询DeptNo为1和2的雇员,并把他们分组罗列出来</p>
</blockquote>
<h4 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h4><p>创建存储过程</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">create or replace procedure p_emp_list (</div><div class="line">       param1 in varchar2,</div><div class="line">       param2 in varchar2,</div><div class="line">       CUR_OUT_1 OUT SYS_REFCURSOR,</div><div class="line">       CUR_OUT_2 OUT SYS_REFCURSOR</div><div class="line">) is</div><div class="line">begin</div><div class="line">      open CUR_OUT_1 for</div><div class="line">           select deptno, empname from employee where deptno = param1;</div><div class="line">      open CUR_OUT_2 for</div><div class="line">           select deptno, empname from employee where deptno = param2;</div><div class="line">end p_emp_list;</div></pre></td></tr></table></figure>
<p>该过程有4个参数,前两个作为传入条件:两个不同的DeptNo,后两个得出的不同部门的结果集,至于Sql,为了省事,只查询了部门标号和雇员姓名用以说明</p>
<h4 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h4><p>编写DAO</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line">public List&lt;List&lt;Employee&gt;&gt; listEmployee(final String[] depts) &#123;</div><div class="line">    List&lt;List&lt;Employee&gt;&gt; resultList = (List&lt;List&lt;Employee&gt;&gt;) jdbcTemplate.execute(</div><div class="line">            new CallableStatementCreator() &#123;</div><div class="line">                public CallableStatement createCallableStatement(Connection con)</div><div class="line">                        throws SQLException &#123;</div><div class="line">                    String sqlProc = &quot;&#123;CALL P_EMP_LIST(?, ?, ?, ?)&#125;&quot;; // 调用存储过程的SQL</div><div class="line">                    CallableStatement cs = con.prepareCall(sqlProc);</div><div class="line">                    cs.setString(1, depts[0]);// 设置输入参数的值 部门编号1</div><div class="line">                    cs.setString(2, depts[1]);// 设置输入参数的值 部门编号2</div><div class="line">                    cs.registerOutParameter(3, OracleTypes.CURSOR);// 注册输出参数的类型 游标</div><div class="line">                    cs.registerOutParameter(4, OracleTypes.CURSOR);// 注册输出参数的类型 游标</div><div class="line">                    return cs;</div><div class="line">                &#125;</div><div class="line">            &#125;, new CallableStatementCallback() &#123;</div><div class="line">                public List doInCallableStatement(CallableStatement cs)</div><div class="line">                        throws SQLException, DataAccessException &#123;</div><div class="line">                    </div><div class="line">                    cs.execute();</div><div class="line">                    List list = new ArrayList(); // 存储所有的查询结果</div><div class="line">                    List&lt;Employee&gt; results1 = new ArrayList&lt;Employee&gt;(); // 存放部门1的结果</div><div class="line">                    ResultSet rs = (ResultSet) cs.getObject(3); // 获取存储过程第一个sql的值</div><div class="line">                    // 接收部门1所有雇员对象</div><div class="line">                    while (rs.next()) &#123;</div><div class="line">                        Employee e = new Employee();</div><div class="line">                        e.setDeptNo(rs.getString(&quot;deptNo&quot;));</div><div class="line">                        e.setEmpName(rs.getString(&quot;empName&quot;));</div><div class="line">                        results1.add(e);</div><div class="line">                    &#125;</div><div class="line">                    List&lt;Employee&gt; results2 = new ArrayList&lt;Employee&gt;(); // 存放部门2的结果</div><div class="line">                    rs = (ResultSet) cs.getObject(4); // 获取存储过程第二个sql的值</div><div class="line">                    // 接收部门2所有雇员对象</div><div class="line">                    while (rs.next()) &#123;</div><div class="line">                        Employee e = new Employee();</div><div class="line">                        e.setDeptNo(String.valueOf(rs.getObject(1)));</div><div class="line">                        e.setEmpName(String.valueOf(rs.getObject(2)));</div><div class="line">                        results2.add(e);</div><div class="line">                    &#125;</div><div class="line">                    rs.close(); // 关闭结果集</div><div class="line">                    list.add(results1);</div><div class="line">                    list.add(results2);</div><div class="line">                    </div><div class="line">                    return list;</div><div class="line">                &#125;</div><div class="line">            &#125;);</div><div class="line">    return resultList;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>找个入口执行下(因为是借以前demo的空,所以随便加了个方法)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">@Controller</div><div class="line">@RequestMapping(&quot;/dept&quot;)</div><div class="line">public class DeptBean &#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>方法:接收连个参数作为不同的部门编号 然后调用刚才写的逻辑</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * 分组查询</div><div class="line"> */</div><div class="line">@RequestMapping(&quot;/liste&quot;)</div><div class="line">public String liste(</div><div class="line">        @RequestParam(value=&quot;deptno&quot;, required=true) String deptno,</div><div class="line">        @RequestParam(value=&quot;deptno2&quot;, required=true) String deptno2,</div><div class="line">        Map&lt;String, List&lt;Dept&gt;&gt; model) &#123;</div><div class="line">    </div><div class="line">    System.out.println(deptno);</div><div class="line">    System.out.println(deptno2);</div><div class="line">    </div><div class="line">    List&lt;List&lt;Employee&gt;&gt; list = deptService.listEmployee(new String[]&#123;deptno, deptno2&#125;);</div><div class="line">    </div><div class="line">    return list.size() &gt; 0 ? &quot;/success&quot; : &quot;/error&quot;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>调用地址</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:8080/mvc1/dept/liste?deptno=1&amp;deptno2=2</div></pre></td></tr></table></figure>
<p>附 控制台结果</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">1</div><div class="line">2</div><div class="line">1</div><div class="line">小明</div><div class="line">1</div><div class="line">小红</div><div class="line">1</div><div class="line">小白</div><div class="line">0---------------------</div><div class="line">2</div><div class="line">小绿</div><div class="line">2</div><div class="line">小黑</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 技术向 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 原创 </tag>
            
            <tag> Spring JDBCTemplate </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
